
low_level.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001448  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000074  080015e8  080015e8  000025e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800165c  0800165c  0000305c  2**0
                  CONTENTS
  4 .ARM          00000008  0800165c  0800165c  0000265c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001664  08001664  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001664  08001664  00002664  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001668  08001668  00002668  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  0800166c  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000174  2000005c  080016c8  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001d0  080016c8  000031d0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000147a  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000685  00000000  00000000  00004506  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000180  00000000  00000000  00004b90  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000104  00000000  00000000  00004d10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000213e  00000000  00000000  00004e14  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00002197  00000000  00000000  00006f52  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000a94a  00000000  00000000  000090e9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00013a33  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c4c  00000000  00000000  00013a78  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000053  00000000  00000000  000146c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	2000005c 	.word	0x2000005c
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080015d0 	.word	0x080015d0

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000060 	.word	0x20000060
 80001dc:	080015d0 	.word	0x080015d0

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <pc13_init_exti>:

extern event_t _even;
//event_t _even;
void initVariable(event_t *init);
void pc13_init_exti(void)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	b082      	sub	sp, #8
 8000284:	af00      	add	r7, sp, #0

#define NVIC_BASE                0xE000E100

__STATIC_FORCEINLINE void __disable_irq(void)
{
    __ASM volatile ("cpsid i" : : : "memory");
 8000286:	b672      	cpsid	i
}
 8000288:	bf00      	nop
    //1
    __disable_irq();
    //2
    RCC->RCC_AHB1ENR |= (1U <<2);
 800028a:	4b27      	ldr	r3, [pc, #156]	@ (8000328 <pc13_init_exti+0xa8>)
 800028c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800028e:	4a26      	ldr	r2, [pc, #152]	@ (8000328 <pc13_init_exti+0xa8>)
 8000290:	f043 0304 	orr.w	r3, r3, #4
 8000294:	6313      	str	r3, [r2, #48]	@ 0x30
    //3
    GPIOC->GPIO_MODER &= ~(3U << 26); // input 
 8000296:	4b25      	ldr	r3, [pc, #148]	@ (800032c <pc13_init_exti+0xac>)
 8000298:	681b      	ldr	r3, [r3, #0]
 800029a:	4a24      	ldr	r2, [pc, #144]	@ (800032c <pc13_init_exti+0xac>)
 800029c:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 80002a0:	6013      	str	r3, [r2, #0]
    GPIOC->GPIO_PUPDR &= ~(3U << 26);
 80002a2:	4b22      	ldr	r3, [pc, #136]	@ (800032c <pc13_init_exti+0xac>)
 80002a4:	68db      	ldr	r3, [r3, #12]
 80002a6:	4a21      	ldr	r2, [pc, #132]	@ (800032c <pc13_init_exti+0xac>)
 80002a8:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 80002ac:	60d3      	str	r3, [r2, #12]
    GPIOC->GPIO_PUPDR |= (1U <<26);
 80002ae:	4b1f      	ldr	r3, [pc, #124]	@ (800032c <pc13_init_exti+0xac>)
 80002b0:	68db      	ldr	r3, [r3, #12]
 80002b2:	4a1e      	ldr	r2, [pc, #120]	@ (800032c <pc13_init_exti+0xac>)
 80002b4:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 80002b8:	60d3      	str	r3, [r2, #12]
    //4
    RCC->RCC_APB2ENR |= (1U << 14); // enable clock systick
 80002ba:	4b1b      	ldr	r3, [pc, #108]	@ (8000328 <pc13_init_exti+0xa8>)
 80002bc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80002be:	4a1a      	ldr	r2, [pc, #104]	@ (8000328 <pc13_init_exti+0xa8>)
 80002c0:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80002c4:	6453      	str	r3, [r2, #68]	@ 0x44
    //5
    SYSCFG->SYSCFG_EXTICR4 &= ~(15U << 4); // clear
 80002c6:	4b1a      	ldr	r3, [pc, #104]	@ (8000330 <pc13_init_exti+0xb0>)
 80002c8:	695b      	ldr	r3, [r3, #20]
 80002ca:	4a19      	ldr	r2, [pc, #100]	@ (8000330 <pc13_init_exti+0xb0>)
 80002cc:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80002d0:	6153      	str	r3, [r2, #20]
    SYSCFG->SYSCFG_EXTICR4 |= (1U << 5);
 80002d2:	4b17      	ldr	r3, [pc, #92]	@ (8000330 <pc13_init_exti+0xb0>)
 80002d4:	695b      	ldr	r3, [r3, #20]
 80002d6:	4a16      	ldr	r2, [pc, #88]	@ (8000330 <pc13_init_exti+0xb0>)
 80002d8:	f043 0320 	orr.w	r3, r3, #32
 80002dc:	6153      	str	r3, [r2, #20]
    // 6
    EXTI->EXTI_IMR |= (1U << 13); 
 80002de:	4b15      	ldr	r3, [pc, #84]	@ (8000334 <pc13_init_exti+0xb4>)
 80002e0:	681b      	ldr	r3, [r3, #0]
 80002e2:	4a14      	ldr	r2, [pc, #80]	@ (8000334 <pc13_init_exti+0xb4>)
 80002e4:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80002e8:	6013      	str	r3, [r2, #0]
    // 7
    EXTI->EXTI_FTSR |= (1U << 13);
 80002ea:	4b12      	ldr	r3, [pc, #72]	@ (8000334 <pc13_init_exti+0xb4>)
 80002ec:	68db      	ldr	r3, [r3, #12]
 80002ee:	4a11      	ldr	r2, [pc, #68]	@ (8000334 <pc13_init_exti+0xb4>)
 80002f0:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80002f4:	60d3      	str	r3, [r2, #12]
 80002f6:	2328      	movs	r3, #40	@ 0x28
 80002f8:	71fb      	strb	r3, [r7, #7]
__STATIC_FORCEINLINE void __NVIC_EnableIRQ(IRQ_Priority_t type_IRQ)
{
    if(((int32_t)type_IRQ) >=0)
    {
        __COMPILER_BARRIER();
        NVIC->NVIC_ISER[(((uint32_t)type_IRQ) >> 5U)] = (uint32_t) (1U << (uint32_t)(((uint32_t)type_IRQ) & 0x1F));   
 80002fa:	79fb      	ldrb	r3, [r7, #7]
 80002fc:	f003 031f 	and.w	r3, r3, #31
 8000300:	490d      	ldr	r1, [pc, #52]	@ (8000338 <pc13_init_exti+0xb8>)
 8000302:	79fa      	ldrb	r2, [r7, #7]
 8000304:	0952      	lsrs	r2, r2, #5
 8000306:	b2d2      	uxtb	r2, r2
 8000308:	4610      	mov	r0, r2
 800030a:	2201      	movs	r2, #1
 800030c:	fa02 f303 	lsl.w	r3, r2, r3
 8000310:	f841 3020 	str.w	r3, [r1, r0, lsl #2]
        __COMPILER_BARRIER();    
    }
}
 8000314:	bf00      	nop
    __ASM volatile ("cpsie i" : : : "memory");
 8000316:	b662      	cpsie	i
}
 8000318:	bf00      	nop
    
    // event_t init ={
    //     .evenISR = false,
    //     .cnt =0,
    // };
    initVariable(&_even);
 800031a:	4808      	ldr	r0, [pc, #32]	@ (800033c <pc13_init_exti+0xbc>)
 800031c:	f000 f810 	bl	8000340 <initVariable>

}
 8000320:	bf00      	nop
 8000322:	3708      	adds	r7, #8
 8000324:	46bd      	mov	sp, r7
 8000326:	bd80      	pop	{r7, pc}
 8000328:	40023800 	.word	0x40023800
 800032c:	40020800 	.word	0x40020800
 8000330:	40013800 	.word	0x40013800
 8000334:	40013c00 	.word	0x40013c00
 8000338:	e000e100 	.word	0xe000e100
 800033c:	20000078 	.word	0x20000078

08000340 <initVariable>:

void initVariable(event_t *init)
{
 8000340:	b480      	push	{r7}
 8000342:	b083      	sub	sp, #12
 8000344:	af00      	add	r7, sp, #0
 8000346:	6078      	str	r0, [r7, #4]
    init->evenISR = false;
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	2200      	movs	r2, #0
 800034c:	701a      	strb	r2, [r3, #0]
    init->cnt =0;   
 800034e:	687b      	ldr	r3, [r7, #4]
 8000350:	2200      	movs	r2, #0
 8000352:	605a      	str	r2, [r3, #4]
}
 8000354:	bf00      	nop
 8000356:	370c      	adds	r7, #12
 8000358:	46bd      	mov	sp, r7
 800035a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800035e:	4770      	bx	lr

08000360 <callBack>:
// we are continue , demo code with even external interrupt on gpio 

static void callBack(event_t *process)
{
 8000360:	b580      	push	{r7, lr}
 8000362:	b082      	sub	sp, #8
 8000364:	af00      	add	r7, sp, #0
 8000366:	6078      	str	r0, [r7, #4]
    printf("even come from EXTI13 line:= %d and cnt:= %d\n", process->evenISR= !process->evenISR, ++process->cnt);
 8000368:	687b      	ldr	r3, [r7, #4]
 800036a:	781b      	ldrb	r3, [r3, #0]
 800036c:	b2db      	uxtb	r3, r3
 800036e:	2b00      	cmp	r3, #0
 8000370:	bf14      	ite	ne
 8000372:	2301      	movne	r3, #1
 8000374:	2300      	moveq	r3, #0
 8000376:	b2db      	uxtb	r3, r3
 8000378:	f083 0301 	eor.w	r3, r3, #1
 800037c:	b2db      	uxtb	r3, r3
 800037e:	f003 0301 	and.w	r3, r3, #1
 8000382:	b2da      	uxtb	r2, r3
 8000384:	687b      	ldr	r3, [r7, #4]
 8000386:	4611      	mov	r1, r2
 8000388:	7019      	strb	r1, [r3, #0]
 800038a:	4611      	mov	r1, r2
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	685b      	ldr	r3, [r3, #4]
 8000390:	3301      	adds	r3, #1
 8000392:	687a      	ldr	r2, [r7, #4]
 8000394:	6053      	str	r3, [r2, #4]
 8000396:	461a      	mov	r2, r3
 8000398:	4803      	ldr	r0, [pc, #12]	@ (80003a8 <callBack+0x48>)
 800039a:	f000 fa4d 	bl	8000838 <iprintf>
}
 800039e:	bf00      	nop
 80003a0:	3708      	adds	r7, #8
 80003a2:	46bd      	mov	sp, r7
 80003a4:	bd80      	pop	{r7, pc}
 80003a6:	bf00      	nop
 80003a8:	080015e8 	.word	0x080015e8

080003ac <EXTI15_10_IRQHandler>:

void EXTI15_10_IRQHandler(void)
{
 80003ac:	b580      	push	{r7, lr}
 80003ae:	af00      	add	r7, sp, #0
    if((EXTI->EXTI_PR & (1U << 13)))
 80003b0:	4b08      	ldr	r3, [pc, #32]	@ (80003d4 <EXTI15_10_IRQHandler+0x28>)
 80003b2:	695b      	ldr	r3, [r3, #20]
 80003b4:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 80003b8:	2b00      	cmp	r3, #0
 80003ba:	d008      	beq.n	80003ce <EXTI15_10_IRQHandler+0x22>
    {
        EXTI->EXTI_PR |= (1U << 13);
 80003bc:	4b05      	ldr	r3, [pc, #20]	@ (80003d4 <EXTI15_10_IRQHandler+0x28>)
 80003be:	695b      	ldr	r3, [r3, #20]
 80003c0:	4a04      	ldr	r2, [pc, #16]	@ (80003d4 <EXTI15_10_IRQHandler+0x28>)
 80003c2:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80003c6:	6153      	str	r3, [r2, #20]
        callBack(&_even);
 80003c8:	4803      	ldr	r0, [pc, #12]	@ (80003d8 <EXTI15_10_IRQHandler+0x2c>)
 80003ca:	f7ff ffc9 	bl	8000360 <callBack>
    }
}
 80003ce:	bf00      	nop
 80003d0:	bd80      	pop	{r7, pc}
 80003d2:	bf00      	nop
 80003d4:	40013c00 	.word	0x40013c00
 80003d8:	20000078 	.word	0x20000078

080003dc <main>:
// we are continue with read adc using continous mode 
// in the previous video, i will read adc with single mode , today i config adc for read channel 5 in continous conversion mode
// le do it

int main()
{
 80003dc:	b580      	push	{r7, lr}
 80003de:	af00      	add	r7, sp, #0
	// set pin 26 to 1
	// set pin 27 to 0
	// GPIOC->GPIO_PUPDR |= (1U << 26);
	// GPIOC->GPIO_PUPDR &= ~(1U << 27);
	/***************************************************************************** */
	uart1_rxtx();
 80003e0:	f000 f8ca 	bl	8000578 <uart1_rxtx>
	// init_pa6_input_capture();
	//init_timer2_1hz();
	
	//uint32_t timeStamp = 0;
	/********************************************************************* */
	pc13_init_exti();
 80003e4:	f7ff ff4c 	bl	8000280 <pc13_init_exti>
		today i code interrupt , let's do it
	 */
	while(1)
	{
		
		if(_even.cnt ==10)
 80003e8:	4b03      	ldr	r3, [pc, #12]	@ (80003f8 <main+0x1c>)
 80003ea:	685b      	ldr	r3, [r3, #4]
 80003ec:	2b0a      	cmp	r3, #10
 80003ee:	d1fb      	bne.n	80003e8 <main+0xc>
		{
			printf("hello world ^^\n");
 80003f0:	4802      	ldr	r0, [pc, #8]	@ (80003fc <main+0x20>)
 80003f2:	f000 fa89 	bl	8000908 <puts>
		if(_even.cnt ==10)
 80003f6:	e7f7      	b.n	80003e8 <main+0xc>
 80003f8:	20000078 	.word	0x20000078
 80003fc:	08001618 	.word	0x08001618

08000400 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000400:	b580      	push	{r7, lr}
 8000402:	b086      	sub	sp, #24
 8000404:	af00      	add	r7, sp, #0
 8000406:	60f8      	str	r0, [r7, #12]
 8000408:	60b9      	str	r1, [r7, #8]
 800040a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800040c:	2300      	movs	r3, #0
 800040e:	617b      	str	r3, [r7, #20]
 8000410:	e00a      	b.n	8000428 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000412:	f3af 8000 	nop.w
 8000416:	4601      	mov	r1, r0
 8000418:	68bb      	ldr	r3, [r7, #8]
 800041a:	1c5a      	adds	r2, r3, #1
 800041c:	60ba      	str	r2, [r7, #8]
 800041e:	b2ca      	uxtb	r2, r1
 8000420:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000422:	697b      	ldr	r3, [r7, #20]
 8000424:	3301      	adds	r3, #1
 8000426:	617b      	str	r3, [r7, #20]
 8000428:	697a      	ldr	r2, [r7, #20]
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	429a      	cmp	r2, r3
 800042e:	dbf0      	blt.n	8000412 <_read+0x12>
  }

  return len;
 8000430:	687b      	ldr	r3, [r7, #4]
}
 8000432:	4618      	mov	r0, r3
 8000434:	3718      	adds	r7, #24
 8000436:	46bd      	mov	sp, r7
 8000438:	bd80      	pop	{r7, pc}

0800043a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800043a:	b580      	push	{r7, lr}
 800043c:	b086      	sub	sp, #24
 800043e:	af00      	add	r7, sp, #0
 8000440:	60f8      	str	r0, [r7, #12]
 8000442:	60b9      	str	r1, [r7, #8]
 8000444:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000446:	2300      	movs	r3, #0
 8000448:	617b      	str	r3, [r7, #20]
 800044a:	e009      	b.n	8000460 <_write+0x26>
  {
    __io_putchar(*ptr++);
 800044c:	68bb      	ldr	r3, [r7, #8]
 800044e:	1c5a      	adds	r2, r3, #1
 8000450:	60ba      	str	r2, [r7, #8]
 8000452:	781b      	ldrb	r3, [r3, #0]
 8000454:	4618      	mov	r0, r3
 8000456:	f000 f877 	bl	8000548 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800045a:	697b      	ldr	r3, [r7, #20]
 800045c:	3301      	adds	r3, #1
 800045e:	617b      	str	r3, [r7, #20]
 8000460:	697a      	ldr	r2, [r7, #20]
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	429a      	cmp	r2, r3
 8000466:	dbf1      	blt.n	800044c <_write+0x12>
  }
  return len;
 8000468:	687b      	ldr	r3, [r7, #4]
}
 800046a:	4618      	mov	r0, r3
 800046c:	3718      	adds	r7, #24
 800046e:	46bd      	mov	sp, r7
 8000470:	bd80      	pop	{r7, pc}

08000472 <_close>:

int _close(int file)
{
 8000472:	b480      	push	{r7}
 8000474:	b083      	sub	sp, #12
 8000476:	af00      	add	r7, sp, #0
 8000478:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800047a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800047e:	4618      	mov	r0, r3
 8000480:	370c      	adds	r7, #12
 8000482:	46bd      	mov	sp, r7
 8000484:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000488:	4770      	bx	lr

0800048a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800048a:	b480      	push	{r7}
 800048c:	b083      	sub	sp, #12
 800048e:	af00      	add	r7, sp, #0
 8000490:	6078      	str	r0, [r7, #4]
 8000492:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000494:	683b      	ldr	r3, [r7, #0]
 8000496:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800049a:	605a      	str	r2, [r3, #4]
  return 0;
 800049c:	2300      	movs	r3, #0
}
 800049e:	4618      	mov	r0, r3
 80004a0:	370c      	adds	r7, #12
 80004a2:	46bd      	mov	sp, r7
 80004a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004a8:	4770      	bx	lr

080004aa <_isatty>:

int _isatty(int file)
{
 80004aa:	b480      	push	{r7}
 80004ac:	b083      	sub	sp, #12
 80004ae:	af00      	add	r7, sp, #0
 80004b0:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80004b2:	2301      	movs	r3, #1
}
 80004b4:	4618      	mov	r0, r3
 80004b6:	370c      	adds	r7, #12
 80004b8:	46bd      	mov	sp, r7
 80004ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004be:	4770      	bx	lr

080004c0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80004c0:	b480      	push	{r7}
 80004c2:	b085      	sub	sp, #20
 80004c4:	af00      	add	r7, sp, #0
 80004c6:	60f8      	str	r0, [r7, #12]
 80004c8:	60b9      	str	r1, [r7, #8]
 80004ca:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80004cc:	2300      	movs	r3, #0
}
 80004ce:	4618      	mov	r0, r3
 80004d0:	3714      	adds	r7, #20
 80004d2:	46bd      	mov	sp, r7
 80004d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004d8:	4770      	bx	lr
	...

080004dc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004dc:	b580      	push	{r7, lr}
 80004de:	b086      	sub	sp, #24
 80004e0:	af00      	add	r7, sp, #0
 80004e2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004e4:	4a14      	ldr	r2, [pc, #80]	@ (8000538 <_sbrk+0x5c>)
 80004e6:	4b15      	ldr	r3, [pc, #84]	@ (800053c <_sbrk+0x60>)
 80004e8:	1ad3      	subs	r3, r2, r3
 80004ea:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004ec:	697b      	ldr	r3, [r7, #20]
 80004ee:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004f0:	4b13      	ldr	r3, [pc, #76]	@ (8000540 <_sbrk+0x64>)
 80004f2:	681b      	ldr	r3, [r3, #0]
 80004f4:	2b00      	cmp	r3, #0
 80004f6:	d102      	bne.n	80004fe <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004f8:	4b11      	ldr	r3, [pc, #68]	@ (8000540 <_sbrk+0x64>)
 80004fa:	4a12      	ldr	r2, [pc, #72]	@ (8000544 <_sbrk+0x68>)
 80004fc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004fe:	4b10      	ldr	r3, [pc, #64]	@ (8000540 <_sbrk+0x64>)
 8000500:	681a      	ldr	r2, [r3, #0]
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	4413      	add	r3, r2
 8000506:	693a      	ldr	r2, [r7, #16]
 8000508:	429a      	cmp	r2, r3
 800050a:	d207      	bcs.n	800051c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800050c:	f000 fb2a 	bl	8000b64 <__errno>
 8000510:	4603      	mov	r3, r0
 8000512:	220c      	movs	r2, #12
 8000514:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000516:	f04f 33ff 	mov.w	r3, #4294967295
 800051a:	e009      	b.n	8000530 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800051c:	4b08      	ldr	r3, [pc, #32]	@ (8000540 <_sbrk+0x64>)
 800051e:	681b      	ldr	r3, [r3, #0]
 8000520:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000522:	4b07      	ldr	r3, [pc, #28]	@ (8000540 <_sbrk+0x64>)
 8000524:	681a      	ldr	r2, [r3, #0]
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	4413      	add	r3, r2
 800052a:	4a05      	ldr	r2, [pc, #20]	@ (8000540 <_sbrk+0x64>)
 800052c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800052e:	68fb      	ldr	r3, [r7, #12]
}
 8000530:	4618      	mov	r0, r3
 8000532:	3718      	adds	r7, #24
 8000534:	46bd      	mov	sp, r7
 8000536:	bd80      	pop	{r7, pc}
 8000538:	20018000 	.word	0x20018000
 800053c:	00000400 	.word	0x00000400
 8000540:	20000080 	.word	0x20000080
 8000544:	200001d0 	.word	0x200001d0

08000548 <__io_putchar>:
#include <stdio.h>
#include "adc.h"
#include "systick.h"

int __io_putchar(int ch)
{	
 8000548:	b480      	push	{r7}
 800054a:	b083      	sub	sp, #12
 800054c:	af00      	add	r7, sp, #0
 800054e:	6078      	str	r0, [r7, #4]
	USART1->USART_DR = (ch & 0xFF);
 8000550:	687b      	ldr	r3, [r7, #4]
 8000552:	4a08      	ldr	r2, [pc, #32]	@ (8000574 <__io_putchar+0x2c>)
 8000554:	b2db      	uxtb	r3, r3
 8000556:	6053      	str	r3, [r2, #4]
	while(!(USART1->USART_SR & (1U << 7)));
 8000558:	bf00      	nop
 800055a:	4b06      	ldr	r3, [pc, #24]	@ (8000574 <__io_putchar+0x2c>)
 800055c:	681b      	ldr	r3, [r3, #0]
 800055e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000562:	2b00      	cmp	r3, #0
 8000564:	d0f9      	beq.n	800055a <__io_putchar+0x12>
	return ch;
 8000566:	687b      	ldr	r3, [r7, #4]
}
 8000568:	4618      	mov	r0, r3
 800056a:	370c      	adds	r7, #12
 800056c:	46bd      	mov	sp, r7
 800056e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000572:	4770      	bx	lr
 8000574:	40011000 	.word	0x40011000

08000578 <uart1_rxtx>:
	//if(!(USART1->USART_SR & (1U << 5)));
	return USART1->USART_DR;
}

void uart1_rxtx(void)
{
 8000578:	b480      	push	{r7}
 800057a:	af00      	add	r7, sp, #0
	// PA9 TX 
	// 1. enable clock gpioa
	RCC->RCC_AHB1ENR |= GPIOA_ENABLE;
 800057c:	4b35      	ldr	r3, [pc, #212]	@ (8000654 <uart1_rxtx+0xdc>)
 800057e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000580:	4a34      	ldr	r2, [pc, #208]	@ (8000654 <uart1_rxtx+0xdc>)
 8000582:	f043 0301 	orr.w	r3, r3, #1
 8000586:	6313      	str	r3, [r2, #48]	@ 0x30
	//2 . set mode alternate 
	GPIOA->GPIO_MODER &= ~(1U << 18); 
 8000588:	4b33      	ldr	r3, [pc, #204]	@ (8000658 <uart1_rxtx+0xe0>)
 800058a:	681b      	ldr	r3, [r3, #0]
 800058c:	4a32      	ldr	r2, [pc, #200]	@ (8000658 <uart1_rxtx+0xe0>)
 800058e:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8000592:	6013      	str	r3, [r2, #0]
	GPIOA->GPIO_MODER |= (1U << 19);
 8000594:	4b30      	ldr	r3, [pc, #192]	@ (8000658 <uart1_rxtx+0xe0>)
 8000596:	681b      	ldr	r3, [r3, #0]
 8000598:	4a2f      	ldr	r2, [pc, #188]	@ (8000658 <uart1_rxtx+0xe0>)
 800059a:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 800059e:	6013      	str	r3, [r2, #0]
	// 3.  SET ALTERNATE PIN FOR PA9
	GPIOA->GPIO_AFR[1] &= ~ (0xF << 4);
 80005a0:	4b2d      	ldr	r3, [pc, #180]	@ (8000658 <uart1_rxtx+0xe0>)
 80005a2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80005a4:	4a2c      	ldr	r2, [pc, #176]	@ (8000658 <uart1_rxtx+0xe0>)
 80005a6:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80005aa:	6253      	str	r3, [r2, #36]	@ 0x24
	GPIOA->GPIO_AFR[1] |= (1U << 6) | (1U << 5) | (1U << 4);
 80005ac:	4b2a      	ldr	r3, [pc, #168]	@ (8000658 <uart1_rxtx+0xe0>)
 80005ae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80005b0:	4a29      	ldr	r2, [pc, #164]	@ (8000658 <uart1_rxtx+0xe0>)
 80005b2:	f043 0370 	orr.w	r3, r3, #112	@ 0x70
 80005b6:	6253      	str	r3, [r2, #36]	@ 0x24
	// PA10 RX 
	// set mode alternate
	GPIOA->GPIO_MODER &= ~(3U << 20);
 80005b8:	4b27      	ldr	r3, [pc, #156]	@ (8000658 <uart1_rxtx+0xe0>)
 80005ba:	681b      	ldr	r3, [r3, #0]
 80005bc:	4a26      	ldr	r2, [pc, #152]	@ (8000658 <uart1_rxtx+0xe0>)
 80005be:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 80005c2:	6013      	str	r3, [r2, #0]
	GPIOA->GPIO_MODER |= (2U << 20); 
 80005c4:	4b24      	ldr	r3, [pc, #144]	@ (8000658 <uart1_rxtx+0xe0>)
 80005c6:	681b      	ldr	r3, [r3, #0]
 80005c8:	4a23      	ldr	r2, [pc, #140]	@ (8000658 <uart1_rxtx+0xe0>)
 80005ca:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80005ce:	6013      	str	r3, [r2, #0]

	// set alternate pin for PA10
	GPIOA->GPIO_AFR[1] &= ~ (0xF << 8);
 80005d0:	4b21      	ldr	r3, [pc, #132]	@ (8000658 <uart1_rxtx+0xe0>)
 80005d2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80005d4:	4a20      	ldr	r2, [pc, #128]	@ (8000658 <uart1_rxtx+0xe0>)
 80005d6:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 80005da:	6253      	str	r3, [r2, #36]	@ 0x24
	GPIOA->GPIO_AFR[1] |= (7U << 8);
 80005dc:	4b1e      	ldr	r3, [pc, #120]	@ (8000658 <uart1_rxtx+0xe0>)
 80005de:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80005e0:	4a1d      	ldr	r2, [pc, #116]	@ (8000658 <uart1_rxtx+0xe0>)
 80005e2:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 80005e6:	6253      	str	r3, [r2, #36]	@ 0x24

	// 1. enable clock usart 1
	RCC->RCC_APB2ENR |= USART1_ENABLE;
 80005e8:	4b1a      	ldr	r3, [pc, #104]	@ (8000654 <uart1_rxtx+0xdc>)
 80005ea:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80005ec:	4a19      	ldr	r2, [pc, #100]	@ (8000654 <uart1_rxtx+0xdc>)
 80005ee:	f043 0310 	orr.w	r3, r3, #16
 80005f2:	6453      	str	r3, [r2, #68]	@ 0x44
	// over8 = 0
	USART1->USART_CR1 &= ~ (1U << 15); // OVER8 ==0 
 80005f4:	4b19      	ldr	r3, [pc, #100]	@ (800065c <uart1_rxtx+0xe4>)
 80005f6:	68db      	ldr	r3, [r3, #12]
 80005f8:	4a18      	ldr	r2, [pc, #96]	@ (800065c <uart1_rxtx+0xe4>)
 80005fa:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 80005fe:	60d3      	str	r3, [r2, #12]
	// 2. set baudrate
	/**
	 * baudrate = flck/(8*(2-OVER8)*USARTDIV)
	 */
	USART1->USART_BRR |= (8U << 4) | (11U << 0);
 8000600:	4b16      	ldr	r3, [pc, #88]	@ (800065c <uart1_rxtx+0xe4>)
 8000602:	689b      	ldr	r3, [r3, #8]
 8000604:	4a15      	ldr	r2, [pc, #84]	@ (800065c <uart1_rxtx+0xe4>)
 8000606:	f043 038b 	orr.w	r3, r3, #139	@ 0x8b
 800060a:	6093      	str	r3, [r2, #8]
	// 3. SET MODE TE
	USART1->USART_CR1 |= (1U << 3);
 800060c:	4b13      	ldr	r3, [pc, #76]	@ (800065c <uart1_rxtx+0xe4>)
 800060e:	68db      	ldr	r3, [r3, #12]
 8000610:	4a12      	ldr	r2, [pc, #72]	@ (800065c <uart1_rxtx+0xe4>)
 8000612:	f043 0308 	orr.w	r3, r3, #8
 8000616:	60d3      	str	r3, [r2, #12]

	// SET MODE RX 
	USART1->USART_CR1 |= (1U << 2);
 8000618:	4b10      	ldr	r3, [pc, #64]	@ (800065c <uart1_rxtx+0xe4>)
 800061a:	68db      	ldr	r3, [r3, #12]
 800061c:	4a0f      	ldr	r2, [pc, #60]	@ (800065c <uart1_rxtx+0xe4>)
 800061e:	f043 0304 	orr.w	r3, r3, #4
 8000622:	60d3      	str	r3, [r2, #12]

	// 4. 1 bit start, 8 bit data, 1 stop bit
	USART1->USART_CR1 &= ~ (1U << 12);
 8000624:	4b0d      	ldr	r3, [pc, #52]	@ (800065c <uart1_rxtx+0xe4>)
 8000626:	68db      	ldr	r3, [r3, #12]
 8000628:	4a0c      	ldr	r2, [pc, #48]	@ (800065c <uart1_rxtx+0xe4>)
 800062a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800062e:	60d3      	str	r3, [r2, #12]
	USART1->USART_CR2 &= ~(3U << 12);
 8000630:	4b0a      	ldr	r3, [pc, #40]	@ (800065c <uart1_rxtx+0xe4>)
 8000632:	691b      	ldr	r3, [r3, #16]
 8000634:	4a09      	ldr	r2, [pc, #36]	@ (800065c <uart1_rxtx+0xe4>)
 8000636:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 800063a:	6113      	str	r3, [r2, #16]
	//  5. enable usart
	USART1->USART_CR1 |= (1U<<13);//enable uart
 800063c:	4b07      	ldr	r3, [pc, #28]	@ (800065c <uart1_rxtx+0xe4>)
 800063e:	68db      	ldr	r3, [r3, #12]
 8000640:	4a06      	ldr	r2, [pc, #24]	@ (800065c <uart1_rxtx+0xe4>)
 8000642:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8000646:	60d3      	str	r3, [r2, #12]
}
 8000648:	bf00      	nop
 800064a:	46bd      	mov	sp, r7
 800064c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000650:	4770      	bx	lr
 8000652:	bf00      	nop
 8000654:	40023800 	.word	0x40023800
 8000658:	40020000 	.word	0x40020000
 800065c:	40011000 	.word	0x40011000

08000660 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000660:	480d      	ldr	r0, [pc, #52]	@ (8000698 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000662:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000664:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000668:	480c      	ldr	r0, [pc, #48]	@ (800069c <LoopForever+0x6>)
  ldr r1, =_edata
 800066a:	490d      	ldr	r1, [pc, #52]	@ (80006a0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800066c:	4a0d      	ldr	r2, [pc, #52]	@ (80006a4 <LoopForever+0xe>)
  movs r3, #0
 800066e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000670:	e002      	b.n	8000678 <LoopCopyDataInit>

08000672 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000672:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000674:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000676:	3304      	adds	r3, #4

08000678 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000678:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800067a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800067c:	d3f9      	bcc.n	8000672 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800067e:	4a0a      	ldr	r2, [pc, #40]	@ (80006a8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000680:	4c0a      	ldr	r4, [pc, #40]	@ (80006ac <LoopForever+0x16>)
  movs r3, #0
 8000682:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000684:	e001      	b.n	800068a <LoopFillZerobss>

08000686 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000686:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000688:	3204      	adds	r2, #4

0800068a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800068a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800068c:	d3fb      	bcc.n	8000686 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800068e:	f000 fa6f 	bl	8000b70 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000692:	f7ff fea3 	bl	80003dc <main>

08000696 <LoopForever>:

LoopForever:
  b LoopForever
 8000696:	e7fe      	b.n	8000696 <LoopForever>
  ldr   r0, =_estack
 8000698:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 800069c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80006a0:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 80006a4:	0800166c 	.word	0x0800166c
  ldr r2, =_sbss
 80006a8:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80006ac:	200001d0 	.word	0x200001d0

080006b0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80006b0:	e7fe      	b.n	80006b0 <ADC_IRQHandler>
	...

080006b4 <std>:
 80006b4:	2300      	movs	r3, #0
 80006b6:	b510      	push	{r4, lr}
 80006b8:	4604      	mov	r4, r0
 80006ba:	e9c0 3300 	strd	r3, r3, [r0]
 80006be:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80006c2:	6083      	str	r3, [r0, #8]
 80006c4:	8181      	strh	r1, [r0, #12]
 80006c6:	6643      	str	r3, [r0, #100]	@ 0x64
 80006c8:	81c2      	strh	r2, [r0, #14]
 80006ca:	6183      	str	r3, [r0, #24]
 80006cc:	4619      	mov	r1, r3
 80006ce:	2208      	movs	r2, #8
 80006d0:	305c      	adds	r0, #92	@ 0x5c
 80006d2:	f000 f9f9 	bl	8000ac8 <memset>
 80006d6:	4b0d      	ldr	r3, [pc, #52]	@ (800070c <std+0x58>)
 80006d8:	6263      	str	r3, [r4, #36]	@ 0x24
 80006da:	4b0d      	ldr	r3, [pc, #52]	@ (8000710 <std+0x5c>)
 80006dc:	62a3      	str	r3, [r4, #40]	@ 0x28
 80006de:	4b0d      	ldr	r3, [pc, #52]	@ (8000714 <std+0x60>)
 80006e0:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80006e2:	4b0d      	ldr	r3, [pc, #52]	@ (8000718 <std+0x64>)
 80006e4:	6323      	str	r3, [r4, #48]	@ 0x30
 80006e6:	4b0d      	ldr	r3, [pc, #52]	@ (800071c <std+0x68>)
 80006e8:	6224      	str	r4, [r4, #32]
 80006ea:	429c      	cmp	r4, r3
 80006ec:	d006      	beq.n	80006fc <std+0x48>
 80006ee:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80006f2:	4294      	cmp	r4, r2
 80006f4:	d002      	beq.n	80006fc <std+0x48>
 80006f6:	33d0      	adds	r3, #208	@ 0xd0
 80006f8:	429c      	cmp	r4, r3
 80006fa:	d105      	bne.n	8000708 <std+0x54>
 80006fc:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000700:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000704:	f000 ba58 	b.w	8000bb8 <__retarget_lock_init_recursive>
 8000708:	bd10      	pop	{r4, pc}
 800070a:	bf00      	nop
 800070c:	08000919 	.word	0x08000919
 8000710:	0800093b 	.word	0x0800093b
 8000714:	08000973 	.word	0x08000973
 8000718:	08000997 	.word	0x08000997
 800071c:	20000084 	.word	0x20000084

08000720 <stdio_exit_handler>:
 8000720:	4a02      	ldr	r2, [pc, #8]	@ (800072c <stdio_exit_handler+0xc>)
 8000722:	4903      	ldr	r1, [pc, #12]	@ (8000730 <stdio_exit_handler+0x10>)
 8000724:	4803      	ldr	r0, [pc, #12]	@ (8000734 <stdio_exit_handler+0x14>)
 8000726:	f000 b869 	b.w	80007fc <_fwalk_sglue>
 800072a:	bf00      	nop
 800072c:	20000000 	.word	0x20000000
 8000730:	08001459 	.word	0x08001459
 8000734:	20000010 	.word	0x20000010

08000738 <cleanup_stdio>:
 8000738:	6841      	ldr	r1, [r0, #4]
 800073a:	4b0c      	ldr	r3, [pc, #48]	@ (800076c <cleanup_stdio+0x34>)
 800073c:	4299      	cmp	r1, r3
 800073e:	b510      	push	{r4, lr}
 8000740:	4604      	mov	r4, r0
 8000742:	d001      	beq.n	8000748 <cleanup_stdio+0x10>
 8000744:	f000 fe88 	bl	8001458 <_fflush_r>
 8000748:	68a1      	ldr	r1, [r4, #8]
 800074a:	4b09      	ldr	r3, [pc, #36]	@ (8000770 <cleanup_stdio+0x38>)
 800074c:	4299      	cmp	r1, r3
 800074e:	d002      	beq.n	8000756 <cleanup_stdio+0x1e>
 8000750:	4620      	mov	r0, r4
 8000752:	f000 fe81 	bl	8001458 <_fflush_r>
 8000756:	68e1      	ldr	r1, [r4, #12]
 8000758:	4b06      	ldr	r3, [pc, #24]	@ (8000774 <cleanup_stdio+0x3c>)
 800075a:	4299      	cmp	r1, r3
 800075c:	d004      	beq.n	8000768 <cleanup_stdio+0x30>
 800075e:	4620      	mov	r0, r4
 8000760:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000764:	f000 be78 	b.w	8001458 <_fflush_r>
 8000768:	bd10      	pop	{r4, pc}
 800076a:	bf00      	nop
 800076c:	20000084 	.word	0x20000084
 8000770:	200000ec 	.word	0x200000ec
 8000774:	20000154 	.word	0x20000154

08000778 <global_stdio_init.part.0>:
 8000778:	b510      	push	{r4, lr}
 800077a:	4b0b      	ldr	r3, [pc, #44]	@ (80007a8 <global_stdio_init.part.0+0x30>)
 800077c:	4c0b      	ldr	r4, [pc, #44]	@ (80007ac <global_stdio_init.part.0+0x34>)
 800077e:	4a0c      	ldr	r2, [pc, #48]	@ (80007b0 <global_stdio_init.part.0+0x38>)
 8000780:	601a      	str	r2, [r3, #0]
 8000782:	4620      	mov	r0, r4
 8000784:	2200      	movs	r2, #0
 8000786:	2104      	movs	r1, #4
 8000788:	f7ff ff94 	bl	80006b4 <std>
 800078c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000790:	2201      	movs	r2, #1
 8000792:	2109      	movs	r1, #9
 8000794:	f7ff ff8e 	bl	80006b4 <std>
 8000798:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800079c:	2202      	movs	r2, #2
 800079e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80007a2:	2112      	movs	r1, #18
 80007a4:	f7ff bf86 	b.w	80006b4 <std>
 80007a8:	200001bc 	.word	0x200001bc
 80007ac:	20000084 	.word	0x20000084
 80007b0:	08000721 	.word	0x08000721

080007b4 <__sfp_lock_acquire>:
 80007b4:	4801      	ldr	r0, [pc, #4]	@ (80007bc <__sfp_lock_acquire+0x8>)
 80007b6:	f000 ba00 	b.w	8000bba <__retarget_lock_acquire_recursive>
 80007ba:	bf00      	nop
 80007bc:	200001c5 	.word	0x200001c5

080007c0 <__sfp_lock_release>:
 80007c0:	4801      	ldr	r0, [pc, #4]	@ (80007c8 <__sfp_lock_release+0x8>)
 80007c2:	f000 b9fb 	b.w	8000bbc <__retarget_lock_release_recursive>
 80007c6:	bf00      	nop
 80007c8:	200001c5 	.word	0x200001c5

080007cc <__sinit>:
 80007cc:	b510      	push	{r4, lr}
 80007ce:	4604      	mov	r4, r0
 80007d0:	f7ff fff0 	bl	80007b4 <__sfp_lock_acquire>
 80007d4:	6a23      	ldr	r3, [r4, #32]
 80007d6:	b11b      	cbz	r3, 80007e0 <__sinit+0x14>
 80007d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80007dc:	f7ff bff0 	b.w	80007c0 <__sfp_lock_release>
 80007e0:	4b04      	ldr	r3, [pc, #16]	@ (80007f4 <__sinit+0x28>)
 80007e2:	6223      	str	r3, [r4, #32]
 80007e4:	4b04      	ldr	r3, [pc, #16]	@ (80007f8 <__sinit+0x2c>)
 80007e6:	681b      	ldr	r3, [r3, #0]
 80007e8:	2b00      	cmp	r3, #0
 80007ea:	d1f5      	bne.n	80007d8 <__sinit+0xc>
 80007ec:	f7ff ffc4 	bl	8000778 <global_stdio_init.part.0>
 80007f0:	e7f2      	b.n	80007d8 <__sinit+0xc>
 80007f2:	bf00      	nop
 80007f4:	08000739 	.word	0x08000739
 80007f8:	200001bc 	.word	0x200001bc

080007fc <_fwalk_sglue>:
 80007fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000800:	4607      	mov	r7, r0
 8000802:	4688      	mov	r8, r1
 8000804:	4614      	mov	r4, r2
 8000806:	2600      	movs	r6, #0
 8000808:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800080c:	f1b9 0901 	subs.w	r9, r9, #1
 8000810:	d505      	bpl.n	800081e <_fwalk_sglue+0x22>
 8000812:	6824      	ldr	r4, [r4, #0]
 8000814:	2c00      	cmp	r4, #0
 8000816:	d1f7      	bne.n	8000808 <_fwalk_sglue+0xc>
 8000818:	4630      	mov	r0, r6
 800081a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800081e:	89ab      	ldrh	r3, [r5, #12]
 8000820:	2b01      	cmp	r3, #1
 8000822:	d907      	bls.n	8000834 <_fwalk_sglue+0x38>
 8000824:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000828:	3301      	adds	r3, #1
 800082a:	d003      	beq.n	8000834 <_fwalk_sglue+0x38>
 800082c:	4629      	mov	r1, r5
 800082e:	4638      	mov	r0, r7
 8000830:	47c0      	blx	r8
 8000832:	4306      	orrs	r6, r0
 8000834:	3568      	adds	r5, #104	@ 0x68
 8000836:	e7e9      	b.n	800080c <_fwalk_sglue+0x10>

08000838 <iprintf>:
 8000838:	b40f      	push	{r0, r1, r2, r3}
 800083a:	b507      	push	{r0, r1, r2, lr}
 800083c:	4906      	ldr	r1, [pc, #24]	@ (8000858 <iprintf+0x20>)
 800083e:	ab04      	add	r3, sp, #16
 8000840:	6808      	ldr	r0, [r1, #0]
 8000842:	f853 2b04 	ldr.w	r2, [r3], #4
 8000846:	6881      	ldr	r1, [r0, #8]
 8000848:	9301      	str	r3, [sp, #4]
 800084a:	f000 fadb 	bl	8000e04 <_vfiprintf_r>
 800084e:	b003      	add	sp, #12
 8000850:	f85d eb04 	ldr.w	lr, [sp], #4
 8000854:	b004      	add	sp, #16
 8000856:	4770      	bx	lr
 8000858:	2000000c 	.word	0x2000000c

0800085c <_puts_r>:
 800085c:	6a03      	ldr	r3, [r0, #32]
 800085e:	b570      	push	{r4, r5, r6, lr}
 8000860:	6884      	ldr	r4, [r0, #8]
 8000862:	4605      	mov	r5, r0
 8000864:	460e      	mov	r6, r1
 8000866:	b90b      	cbnz	r3, 800086c <_puts_r+0x10>
 8000868:	f7ff ffb0 	bl	80007cc <__sinit>
 800086c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800086e:	07db      	lsls	r3, r3, #31
 8000870:	d405      	bmi.n	800087e <_puts_r+0x22>
 8000872:	89a3      	ldrh	r3, [r4, #12]
 8000874:	0598      	lsls	r0, r3, #22
 8000876:	d402      	bmi.n	800087e <_puts_r+0x22>
 8000878:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800087a:	f000 f99e 	bl	8000bba <__retarget_lock_acquire_recursive>
 800087e:	89a3      	ldrh	r3, [r4, #12]
 8000880:	0719      	lsls	r1, r3, #28
 8000882:	d502      	bpl.n	800088a <_puts_r+0x2e>
 8000884:	6923      	ldr	r3, [r4, #16]
 8000886:	2b00      	cmp	r3, #0
 8000888:	d135      	bne.n	80008f6 <_puts_r+0x9a>
 800088a:	4621      	mov	r1, r4
 800088c:	4628      	mov	r0, r5
 800088e:	f000 f8c5 	bl	8000a1c <__swsetup_r>
 8000892:	b380      	cbz	r0, 80008f6 <_puts_r+0x9a>
 8000894:	f04f 35ff 	mov.w	r5, #4294967295
 8000898:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800089a:	07da      	lsls	r2, r3, #31
 800089c:	d405      	bmi.n	80008aa <_puts_r+0x4e>
 800089e:	89a3      	ldrh	r3, [r4, #12]
 80008a0:	059b      	lsls	r3, r3, #22
 80008a2:	d402      	bmi.n	80008aa <_puts_r+0x4e>
 80008a4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80008a6:	f000 f989 	bl	8000bbc <__retarget_lock_release_recursive>
 80008aa:	4628      	mov	r0, r5
 80008ac:	bd70      	pop	{r4, r5, r6, pc}
 80008ae:	2b00      	cmp	r3, #0
 80008b0:	da04      	bge.n	80008bc <_puts_r+0x60>
 80008b2:	69a2      	ldr	r2, [r4, #24]
 80008b4:	429a      	cmp	r2, r3
 80008b6:	dc17      	bgt.n	80008e8 <_puts_r+0x8c>
 80008b8:	290a      	cmp	r1, #10
 80008ba:	d015      	beq.n	80008e8 <_puts_r+0x8c>
 80008bc:	6823      	ldr	r3, [r4, #0]
 80008be:	1c5a      	adds	r2, r3, #1
 80008c0:	6022      	str	r2, [r4, #0]
 80008c2:	7019      	strb	r1, [r3, #0]
 80008c4:	68a3      	ldr	r3, [r4, #8]
 80008c6:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80008ca:	3b01      	subs	r3, #1
 80008cc:	60a3      	str	r3, [r4, #8]
 80008ce:	2900      	cmp	r1, #0
 80008d0:	d1ed      	bne.n	80008ae <_puts_r+0x52>
 80008d2:	2b00      	cmp	r3, #0
 80008d4:	da11      	bge.n	80008fa <_puts_r+0x9e>
 80008d6:	4622      	mov	r2, r4
 80008d8:	210a      	movs	r1, #10
 80008da:	4628      	mov	r0, r5
 80008dc:	f000 f85f 	bl	800099e <__swbuf_r>
 80008e0:	3001      	adds	r0, #1
 80008e2:	d0d7      	beq.n	8000894 <_puts_r+0x38>
 80008e4:	250a      	movs	r5, #10
 80008e6:	e7d7      	b.n	8000898 <_puts_r+0x3c>
 80008e8:	4622      	mov	r2, r4
 80008ea:	4628      	mov	r0, r5
 80008ec:	f000 f857 	bl	800099e <__swbuf_r>
 80008f0:	3001      	adds	r0, #1
 80008f2:	d1e7      	bne.n	80008c4 <_puts_r+0x68>
 80008f4:	e7ce      	b.n	8000894 <_puts_r+0x38>
 80008f6:	3e01      	subs	r6, #1
 80008f8:	e7e4      	b.n	80008c4 <_puts_r+0x68>
 80008fa:	6823      	ldr	r3, [r4, #0]
 80008fc:	1c5a      	adds	r2, r3, #1
 80008fe:	6022      	str	r2, [r4, #0]
 8000900:	220a      	movs	r2, #10
 8000902:	701a      	strb	r2, [r3, #0]
 8000904:	e7ee      	b.n	80008e4 <_puts_r+0x88>
	...

08000908 <puts>:
 8000908:	4b02      	ldr	r3, [pc, #8]	@ (8000914 <puts+0xc>)
 800090a:	4601      	mov	r1, r0
 800090c:	6818      	ldr	r0, [r3, #0]
 800090e:	f7ff bfa5 	b.w	800085c <_puts_r>
 8000912:	bf00      	nop
 8000914:	2000000c 	.word	0x2000000c

08000918 <__sread>:
 8000918:	b510      	push	{r4, lr}
 800091a:	460c      	mov	r4, r1
 800091c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000920:	f000 f8fc 	bl	8000b1c <_read_r>
 8000924:	2800      	cmp	r0, #0
 8000926:	bfab      	itete	ge
 8000928:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800092a:	89a3      	ldrhlt	r3, [r4, #12]
 800092c:	181b      	addge	r3, r3, r0
 800092e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8000932:	bfac      	ite	ge
 8000934:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000936:	81a3      	strhlt	r3, [r4, #12]
 8000938:	bd10      	pop	{r4, pc}

0800093a <__swrite>:
 800093a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800093e:	461f      	mov	r7, r3
 8000940:	898b      	ldrh	r3, [r1, #12]
 8000942:	05db      	lsls	r3, r3, #23
 8000944:	4605      	mov	r5, r0
 8000946:	460c      	mov	r4, r1
 8000948:	4616      	mov	r6, r2
 800094a:	d505      	bpl.n	8000958 <__swrite+0x1e>
 800094c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000950:	2302      	movs	r3, #2
 8000952:	2200      	movs	r2, #0
 8000954:	f000 f8d0 	bl	8000af8 <_lseek_r>
 8000958:	89a3      	ldrh	r3, [r4, #12]
 800095a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800095e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000962:	81a3      	strh	r3, [r4, #12]
 8000964:	4632      	mov	r2, r6
 8000966:	463b      	mov	r3, r7
 8000968:	4628      	mov	r0, r5
 800096a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800096e:	f000 b8e7 	b.w	8000b40 <_write_r>

08000972 <__sseek>:
 8000972:	b510      	push	{r4, lr}
 8000974:	460c      	mov	r4, r1
 8000976:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800097a:	f000 f8bd 	bl	8000af8 <_lseek_r>
 800097e:	1c43      	adds	r3, r0, #1
 8000980:	89a3      	ldrh	r3, [r4, #12]
 8000982:	bf15      	itete	ne
 8000984:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000986:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800098a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800098e:	81a3      	strheq	r3, [r4, #12]
 8000990:	bf18      	it	ne
 8000992:	81a3      	strhne	r3, [r4, #12]
 8000994:	bd10      	pop	{r4, pc}

08000996 <__sclose>:
 8000996:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800099a:	f000 b89d 	b.w	8000ad8 <_close_r>

0800099e <__swbuf_r>:
 800099e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009a0:	460e      	mov	r6, r1
 80009a2:	4614      	mov	r4, r2
 80009a4:	4605      	mov	r5, r0
 80009a6:	b118      	cbz	r0, 80009b0 <__swbuf_r+0x12>
 80009a8:	6a03      	ldr	r3, [r0, #32]
 80009aa:	b90b      	cbnz	r3, 80009b0 <__swbuf_r+0x12>
 80009ac:	f7ff ff0e 	bl	80007cc <__sinit>
 80009b0:	69a3      	ldr	r3, [r4, #24]
 80009b2:	60a3      	str	r3, [r4, #8]
 80009b4:	89a3      	ldrh	r3, [r4, #12]
 80009b6:	071a      	lsls	r2, r3, #28
 80009b8:	d501      	bpl.n	80009be <__swbuf_r+0x20>
 80009ba:	6923      	ldr	r3, [r4, #16]
 80009bc:	b943      	cbnz	r3, 80009d0 <__swbuf_r+0x32>
 80009be:	4621      	mov	r1, r4
 80009c0:	4628      	mov	r0, r5
 80009c2:	f000 f82b 	bl	8000a1c <__swsetup_r>
 80009c6:	b118      	cbz	r0, 80009d0 <__swbuf_r+0x32>
 80009c8:	f04f 37ff 	mov.w	r7, #4294967295
 80009cc:	4638      	mov	r0, r7
 80009ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80009d0:	6823      	ldr	r3, [r4, #0]
 80009d2:	6922      	ldr	r2, [r4, #16]
 80009d4:	1a98      	subs	r0, r3, r2
 80009d6:	6963      	ldr	r3, [r4, #20]
 80009d8:	b2f6      	uxtb	r6, r6
 80009da:	4283      	cmp	r3, r0
 80009dc:	4637      	mov	r7, r6
 80009de:	dc05      	bgt.n	80009ec <__swbuf_r+0x4e>
 80009e0:	4621      	mov	r1, r4
 80009e2:	4628      	mov	r0, r5
 80009e4:	f000 fd38 	bl	8001458 <_fflush_r>
 80009e8:	2800      	cmp	r0, #0
 80009ea:	d1ed      	bne.n	80009c8 <__swbuf_r+0x2a>
 80009ec:	68a3      	ldr	r3, [r4, #8]
 80009ee:	3b01      	subs	r3, #1
 80009f0:	60a3      	str	r3, [r4, #8]
 80009f2:	6823      	ldr	r3, [r4, #0]
 80009f4:	1c5a      	adds	r2, r3, #1
 80009f6:	6022      	str	r2, [r4, #0]
 80009f8:	701e      	strb	r6, [r3, #0]
 80009fa:	6962      	ldr	r2, [r4, #20]
 80009fc:	1c43      	adds	r3, r0, #1
 80009fe:	429a      	cmp	r2, r3
 8000a00:	d004      	beq.n	8000a0c <__swbuf_r+0x6e>
 8000a02:	89a3      	ldrh	r3, [r4, #12]
 8000a04:	07db      	lsls	r3, r3, #31
 8000a06:	d5e1      	bpl.n	80009cc <__swbuf_r+0x2e>
 8000a08:	2e0a      	cmp	r6, #10
 8000a0a:	d1df      	bne.n	80009cc <__swbuf_r+0x2e>
 8000a0c:	4621      	mov	r1, r4
 8000a0e:	4628      	mov	r0, r5
 8000a10:	f000 fd22 	bl	8001458 <_fflush_r>
 8000a14:	2800      	cmp	r0, #0
 8000a16:	d0d9      	beq.n	80009cc <__swbuf_r+0x2e>
 8000a18:	e7d6      	b.n	80009c8 <__swbuf_r+0x2a>
	...

08000a1c <__swsetup_r>:
 8000a1c:	b538      	push	{r3, r4, r5, lr}
 8000a1e:	4b29      	ldr	r3, [pc, #164]	@ (8000ac4 <__swsetup_r+0xa8>)
 8000a20:	4605      	mov	r5, r0
 8000a22:	6818      	ldr	r0, [r3, #0]
 8000a24:	460c      	mov	r4, r1
 8000a26:	b118      	cbz	r0, 8000a30 <__swsetup_r+0x14>
 8000a28:	6a03      	ldr	r3, [r0, #32]
 8000a2a:	b90b      	cbnz	r3, 8000a30 <__swsetup_r+0x14>
 8000a2c:	f7ff fece 	bl	80007cc <__sinit>
 8000a30:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a34:	0719      	lsls	r1, r3, #28
 8000a36:	d422      	bmi.n	8000a7e <__swsetup_r+0x62>
 8000a38:	06da      	lsls	r2, r3, #27
 8000a3a:	d407      	bmi.n	8000a4c <__swsetup_r+0x30>
 8000a3c:	2209      	movs	r2, #9
 8000a3e:	602a      	str	r2, [r5, #0]
 8000a40:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000a44:	81a3      	strh	r3, [r4, #12]
 8000a46:	f04f 30ff 	mov.w	r0, #4294967295
 8000a4a:	e033      	b.n	8000ab4 <__swsetup_r+0x98>
 8000a4c:	0758      	lsls	r0, r3, #29
 8000a4e:	d512      	bpl.n	8000a76 <__swsetup_r+0x5a>
 8000a50:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000a52:	b141      	cbz	r1, 8000a66 <__swsetup_r+0x4a>
 8000a54:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000a58:	4299      	cmp	r1, r3
 8000a5a:	d002      	beq.n	8000a62 <__swsetup_r+0x46>
 8000a5c:	4628      	mov	r0, r5
 8000a5e:	f000 f8af 	bl	8000bc0 <_free_r>
 8000a62:	2300      	movs	r3, #0
 8000a64:	6363      	str	r3, [r4, #52]	@ 0x34
 8000a66:	89a3      	ldrh	r3, [r4, #12]
 8000a68:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8000a6c:	81a3      	strh	r3, [r4, #12]
 8000a6e:	2300      	movs	r3, #0
 8000a70:	6063      	str	r3, [r4, #4]
 8000a72:	6923      	ldr	r3, [r4, #16]
 8000a74:	6023      	str	r3, [r4, #0]
 8000a76:	89a3      	ldrh	r3, [r4, #12]
 8000a78:	f043 0308 	orr.w	r3, r3, #8
 8000a7c:	81a3      	strh	r3, [r4, #12]
 8000a7e:	6923      	ldr	r3, [r4, #16]
 8000a80:	b94b      	cbnz	r3, 8000a96 <__swsetup_r+0x7a>
 8000a82:	89a3      	ldrh	r3, [r4, #12]
 8000a84:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8000a88:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000a8c:	d003      	beq.n	8000a96 <__swsetup_r+0x7a>
 8000a8e:	4621      	mov	r1, r4
 8000a90:	4628      	mov	r0, r5
 8000a92:	f000 fd2f 	bl	80014f4 <__smakebuf_r>
 8000a96:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a9a:	f013 0201 	ands.w	r2, r3, #1
 8000a9e:	d00a      	beq.n	8000ab6 <__swsetup_r+0x9a>
 8000aa0:	2200      	movs	r2, #0
 8000aa2:	60a2      	str	r2, [r4, #8]
 8000aa4:	6962      	ldr	r2, [r4, #20]
 8000aa6:	4252      	negs	r2, r2
 8000aa8:	61a2      	str	r2, [r4, #24]
 8000aaa:	6922      	ldr	r2, [r4, #16]
 8000aac:	b942      	cbnz	r2, 8000ac0 <__swsetup_r+0xa4>
 8000aae:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8000ab2:	d1c5      	bne.n	8000a40 <__swsetup_r+0x24>
 8000ab4:	bd38      	pop	{r3, r4, r5, pc}
 8000ab6:	0799      	lsls	r1, r3, #30
 8000ab8:	bf58      	it	pl
 8000aba:	6962      	ldrpl	r2, [r4, #20]
 8000abc:	60a2      	str	r2, [r4, #8]
 8000abe:	e7f4      	b.n	8000aaa <__swsetup_r+0x8e>
 8000ac0:	2000      	movs	r0, #0
 8000ac2:	e7f7      	b.n	8000ab4 <__swsetup_r+0x98>
 8000ac4:	2000000c 	.word	0x2000000c

08000ac8 <memset>:
 8000ac8:	4402      	add	r2, r0
 8000aca:	4603      	mov	r3, r0
 8000acc:	4293      	cmp	r3, r2
 8000ace:	d100      	bne.n	8000ad2 <memset+0xa>
 8000ad0:	4770      	bx	lr
 8000ad2:	f803 1b01 	strb.w	r1, [r3], #1
 8000ad6:	e7f9      	b.n	8000acc <memset+0x4>

08000ad8 <_close_r>:
 8000ad8:	b538      	push	{r3, r4, r5, lr}
 8000ada:	4d06      	ldr	r5, [pc, #24]	@ (8000af4 <_close_r+0x1c>)
 8000adc:	2300      	movs	r3, #0
 8000ade:	4604      	mov	r4, r0
 8000ae0:	4608      	mov	r0, r1
 8000ae2:	602b      	str	r3, [r5, #0]
 8000ae4:	f7ff fcc5 	bl	8000472 <_close>
 8000ae8:	1c43      	adds	r3, r0, #1
 8000aea:	d102      	bne.n	8000af2 <_close_r+0x1a>
 8000aec:	682b      	ldr	r3, [r5, #0]
 8000aee:	b103      	cbz	r3, 8000af2 <_close_r+0x1a>
 8000af0:	6023      	str	r3, [r4, #0]
 8000af2:	bd38      	pop	{r3, r4, r5, pc}
 8000af4:	200001c0 	.word	0x200001c0

08000af8 <_lseek_r>:
 8000af8:	b538      	push	{r3, r4, r5, lr}
 8000afa:	4d07      	ldr	r5, [pc, #28]	@ (8000b18 <_lseek_r+0x20>)
 8000afc:	4604      	mov	r4, r0
 8000afe:	4608      	mov	r0, r1
 8000b00:	4611      	mov	r1, r2
 8000b02:	2200      	movs	r2, #0
 8000b04:	602a      	str	r2, [r5, #0]
 8000b06:	461a      	mov	r2, r3
 8000b08:	f7ff fcda 	bl	80004c0 <_lseek>
 8000b0c:	1c43      	adds	r3, r0, #1
 8000b0e:	d102      	bne.n	8000b16 <_lseek_r+0x1e>
 8000b10:	682b      	ldr	r3, [r5, #0]
 8000b12:	b103      	cbz	r3, 8000b16 <_lseek_r+0x1e>
 8000b14:	6023      	str	r3, [r4, #0]
 8000b16:	bd38      	pop	{r3, r4, r5, pc}
 8000b18:	200001c0 	.word	0x200001c0

08000b1c <_read_r>:
 8000b1c:	b538      	push	{r3, r4, r5, lr}
 8000b1e:	4d07      	ldr	r5, [pc, #28]	@ (8000b3c <_read_r+0x20>)
 8000b20:	4604      	mov	r4, r0
 8000b22:	4608      	mov	r0, r1
 8000b24:	4611      	mov	r1, r2
 8000b26:	2200      	movs	r2, #0
 8000b28:	602a      	str	r2, [r5, #0]
 8000b2a:	461a      	mov	r2, r3
 8000b2c:	f7ff fc68 	bl	8000400 <_read>
 8000b30:	1c43      	adds	r3, r0, #1
 8000b32:	d102      	bne.n	8000b3a <_read_r+0x1e>
 8000b34:	682b      	ldr	r3, [r5, #0]
 8000b36:	b103      	cbz	r3, 8000b3a <_read_r+0x1e>
 8000b38:	6023      	str	r3, [r4, #0]
 8000b3a:	bd38      	pop	{r3, r4, r5, pc}
 8000b3c:	200001c0 	.word	0x200001c0

08000b40 <_write_r>:
 8000b40:	b538      	push	{r3, r4, r5, lr}
 8000b42:	4d07      	ldr	r5, [pc, #28]	@ (8000b60 <_write_r+0x20>)
 8000b44:	4604      	mov	r4, r0
 8000b46:	4608      	mov	r0, r1
 8000b48:	4611      	mov	r1, r2
 8000b4a:	2200      	movs	r2, #0
 8000b4c:	602a      	str	r2, [r5, #0]
 8000b4e:	461a      	mov	r2, r3
 8000b50:	f7ff fc73 	bl	800043a <_write>
 8000b54:	1c43      	adds	r3, r0, #1
 8000b56:	d102      	bne.n	8000b5e <_write_r+0x1e>
 8000b58:	682b      	ldr	r3, [r5, #0]
 8000b5a:	b103      	cbz	r3, 8000b5e <_write_r+0x1e>
 8000b5c:	6023      	str	r3, [r4, #0]
 8000b5e:	bd38      	pop	{r3, r4, r5, pc}
 8000b60:	200001c0 	.word	0x200001c0

08000b64 <__errno>:
 8000b64:	4b01      	ldr	r3, [pc, #4]	@ (8000b6c <__errno+0x8>)
 8000b66:	6818      	ldr	r0, [r3, #0]
 8000b68:	4770      	bx	lr
 8000b6a:	bf00      	nop
 8000b6c:	2000000c 	.word	0x2000000c

08000b70 <__libc_init_array>:
 8000b70:	b570      	push	{r4, r5, r6, lr}
 8000b72:	4d0d      	ldr	r5, [pc, #52]	@ (8000ba8 <__libc_init_array+0x38>)
 8000b74:	4c0d      	ldr	r4, [pc, #52]	@ (8000bac <__libc_init_array+0x3c>)
 8000b76:	1b64      	subs	r4, r4, r5
 8000b78:	10a4      	asrs	r4, r4, #2
 8000b7a:	2600      	movs	r6, #0
 8000b7c:	42a6      	cmp	r6, r4
 8000b7e:	d109      	bne.n	8000b94 <__libc_init_array+0x24>
 8000b80:	4d0b      	ldr	r5, [pc, #44]	@ (8000bb0 <__libc_init_array+0x40>)
 8000b82:	4c0c      	ldr	r4, [pc, #48]	@ (8000bb4 <__libc_init_array+0x44>)
 8000b84:	f000 fd24 	bl	80015d0 <_init>
 8000b88:	1b64      	subs	r4, r4, r5
 8000b8a:	10a4      	asrs	r4, r4, #2
 8000b8c:	2600      	movs	r6, #0
 8000b8e:	42a6      	cmp	r6, r4
 8000b90:	d105      	bne.n	8000b9e <__libc_init_array+0x2e>
 8000b92:	bd70      	pop	{r4, r5, r6, pc}
 8000b94:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b98:	4798      	blx	r3
 8000b9a:	3601      	adds	r6, #1
 8000b9c:	e7ee      	b.n	8000b7c <__libc_init_array+0xc>
 8000b9e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000ba2:	4798      	blx	r3
 8000ba4:	3601      	adds	r6, #1
 8000ba6:	e7f2      	b.n	8000b8e <__libc_init_array+0x1e>
 8000ba8:	08001664 	.word	0x08001664
 8000bac:	08001664 	.word	0x08001664
 8000bb0:	08001664 	.word	0x08001664
 8000bb4:	08001668 	.word	0x08001668

08000bb8 <__retarget_lock_init_recursive>:
 8000bb8:	4770      	bx	lr

08000bba <__retarget_lock_acquire_recursive>:
 8000bba:	4770      	bx	lr

08000bbc <__retarget_lock_release_recursive>:
 8000bbc:	4770      	bx	lr
	...

08000bc0 <_free_r>:
 8000bc0:	b538      	push	{r3, r4, r5, lr}
 8000bc2:	4605      	mov	r5, r0
 8000bc4:	2900      	cmp	r1, #0
 8000bc6:	d041      	beq.n	8000c4c <_free_r+0x8c>
 8000bc8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000bcc:	1f0c      	subs	r4, r1, #4
 8000bce:	2b00      	cmp	r3, #0
 8000bd0:	bfb8      	it	lt
 8000bd2:	18e4      	addlt	r4, r4, r3
 8000bd4:	f000 f8e0 	bl	8000d98 <__malloc_lock>
 8000bd8:	4a1d      	ldr	r2, [pc, #116]	@ (8000c50 <_free_r+0x90>)
 8000bda:	6813      	ldr	r3, [r2, #0]
 8000bdc:	b933      	cbnz	r3, 8000bec <_free_r+0x2c>
 8000bde:	6063      	str	r3, [r4, #4]
 8000be0:	6014      	str	r4, [r2, #0]
 8000be2:	4628      	mov	r0, r5
 8000be4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000be8:	f000 b8dc 	b.w	8000da4 <__malloc_unlock>
 8000bec:	42a3      	cmp	r3, r4
 8000bee:	d908      	bls.n	8000c02 <_free_r+0x42>
 8000bf0:	6820      	ldr	r0, [r4, #0]
 8000bf2:	1821      	adds	r1, r4, r0
 8000bf4:	428b      	cmp	r3, r1
 8000bf6:	bf01      	itttt	eq
 8000bf8:	6819      	ldreq	r1, [r3, #0]
 8000bfa:	685b      	ldreq	r3, [r3, #4]
 8000bfc:	1809      	addeq	r1, r1, r0
 8000bfe:	6021      	streq	r1, [r4, #0]
 8000c00:	e7ed      	b.n	8000bde <_free_r+0x1e>
 8000c02:	461a      	mov	r2, r3
 8000c04:	685b      	ldr	r3, [r3, #4]
 8000c06:	b10b      	cbz	r3, 8000c0c <_free_r+0x4c>
 8000c08:	42a3      	cmp	r3, r4
 8000c0a:	d9fa      	bls.n	8000c02 <_free_r+0x42>
 8000c0c:	6811      	ldr	r1, [r2, #0]
 8000c0e:	1850      	adds	r0, r2, r1
 8000c10:	42a0      	cmp	r0, r4
 8000c12:	d10b      	bne.n	8000c2c <_free_r+0x6c>
 8000c14:	6820      	ldr	r0, [r4, #0]
 8000c16:	4401      	add	r1, r0
 8000c18:	1850      	adds	r0, r2, r1
 8000c1a:	4283      	cmp	r3, r0
 8000c1c:	6011      	str	r1, [r2, #0]
 8000c1e:	d1e0      	bne.n	8000be2 <_free_r+0x22>
 8000c20:	6818      	ldr	r0, [r3, #0]
 8000c22:	685b      	ldr	r3, [r3, #4]
 8000c24:	6053      	str	r3, [r2, #4]
 8000c26:	4408      	add	r0, r1
 8000c28:	6010      	str	r0, [r2, #0]
 8000c2a:	e7da      	b.n	8000be2 <_free_r+0x22>
 8000c2c:	d902      	bls.n	8000c34 <_free_r+0x74>
 8000c2e:	230c      	movs	r3, #12
 8000c30:	602b      	str	r3, [r5, #0]
 8000c32:	e7d6      	b.n	8000be2 <_free_r+0x22>
 8000c34:	6820      	ldr	r0, [r4, #0]
 8000c36:	1821      	adds	r1, r4, r0
 8000c38:	428b      	cmp	r3, r1
 8000c3a:	bf04      	itt	eq
 8000c3c:	6819      	ldreq	r1, [r3, #0]
 8000c3e:	685b      	ldreq	r3, [r3, #4]
 8000c40:	6063      	str	r3, [r4, #4]
 8000c42:	bf04      	itt	eq
 8000c44:	1809      	addeq	r1, r1, r0
 8000c46:	6021      	streq	r1, [r4, #0]
 8000c48:	6054      	str	r4, [r2, #4]
 8000c4a:	e7ca      	b.n	8000be2 <_free_r+0x22>
 8000c4c:	bd38      	pop	{r3, r4, r5, pc}
 8000c4e:	bf00      	nop
 8000c50:	200001cc 	.word	0x200001cc

08000c54 <sbrk_aligned>:
 8000c54:	b570      	push	{r4, r5, r6, lr}
 8000c56:	4e0f      	ldr	r6, [pc, #60]	@ (8000c94 <sbrk_aligned+0x40>)
 8000c58:	460c      	mov	r4, r1
 8000c5a:	6831      	ldr	r1, [r6, #0]
 8000c5c:	4605      	mov	r5, r0
 8000c5e:	b911      	cbnz	r1, 8000c66 <sbrk_aligned+0x12>
 8000c60:	f000 fca6 	bl	80015b0 <_sbrk_r>
 8000c64:	6030      	str	r0, [r6, #0]
 8000c66:	4621      	mov	r1, r4
 8000c68:	4628      	mov	r0, r5
 8000c6a:	f000 fca1 	bl	80015b0 <_sbrk_r>
 8000c6e:	1c43      	adds	r3, r0, #1
 8000c70:	d103      	bne.n	8000c7a <sbrk_aligned+0x26>
 8000c72:	f04f 34ff 	mov.w	r4, #4294967295
 8000c76:	4620      	mov	r0, r4
 8000c78:	bd70      	pop	{r4, r5, r6, pc}
 8000c7a:	1cc4      	adds	r4, r0, #3
 8000c7c:	f024 0403 	bic.w	r4, r4, #3
 8000c80:	42a0      	cmp	r0, r4
 8000c82:	d0f8      	beq.n	8000c76 <sbrk_aligned+0x22>
 8000c84:	1a21      	subs	r1, r4, r0
 8000c86:	4628      	mov	r0, r5
 8000c88:	f000 fc92 	bl	80015b0 <_sbrk_r>
 8000c8c:	3001      	adds	r0, #1
 8000c8e:	d1f2      	bne.n	8000c76 <sbrk_aligned+0x22>
 8000c90:	e7ef      	b.n	8000c72 <sbrk_aligned+0x1e>
 8000c92:	bf00      	nop
 8000c94:	200001c8 	.word	0x200001c8

08000c98 <_malloc_r>:
 8000c98:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000c9c:	1ccd      	adds	r5, r1, #3
 8000c9e:	f025 0503 	bic.w	r5, r5, #3
 8000ca2:	3508      	adds	r5, #8
 8000ca4:	2d0c      	cmp	r5, #12
 8000ca6:	bf38      	it	cc
 8000ca8:	250c      	movcc	r5, #12
 8000caa:	2d00      	cmp	r5, #0
 8000cac:	4606      	mov	r6, r0
 8000cae:	db01      	blt.n	8000cb4 <_malloc_r+0x1c>
 8000cb0:	42a9      	cmp	r1, r5
 8000cb2:	d904      	bls.n	8000cbe <_malloc_r+0x26>
 8000cb4:	230c      	movs	r3, #12
 8000cb6:	6033      	str	r3, [r6, #0]
 8000cb8:	2000      	movs	r0, #0
 8000cba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000cbe:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000d94 <_malloc_r+0xfc>
 8000cc2:	f000 f869 	bl	8000d98 <__malloc_lock>
 8000cc6:	f8d8 3000 	ldr.w	r3, [r8]
 8000cca:	461c      	mov	r4, r3
 8000ccc:	bb44      	cbnz	r4, 8000d20 <_malloc_r+0x88>
 8000cce:	4629      	mov	r1, r5
 8000cd0:	4630      	mov	r0, r6
 8000cd2:	f7ff ffbf 	bl	8000c54 <sbrk_aligned>
 8000cd6:	1c43      	adds	r3, r0, #1
 8000cd8:	4604      	mov	r4, r0
 8000cda:	d158      	bne.n	8000d8e <_malloc_r+0xf6>
 8000cdc:	f8d8 4000 	ldr.w	r4, [r8]
 8000ce0:	4627      	mov	r7, r4
 8000ce2:	2f00      	cmp	r7, #0
 8000ce4:	d143      	bne.n	8000d6e <_malloc_r+0xd6>
 8000ce6:	2c00      	cmp	r4, #0
 8000ce8:	d04b      	beq.n	8000d82 <_malloc_r+0xea>
 8000cea:	6823      	ldr	r3, [r4, #0]
 8000cec:	4639      	mov	r1, r7
 8000cee:	4630      	mov	r0, r6
 8000cf0:	eb04 0903 	add.w	r9, r4, r3
 8000cf4:	f000 fc5c 	bl	80015b0 <_sbrk_r>
 8000cf8:	4581      	cmp	r9, r0
 8000cfa:	d142      	bne.n	8000d82 <_malloc_r+0xea>
 8000cfc:	6821      	ldr	r1, [r4, #0]
 8000cfe:	1a6d      	subs	r5, r5, r1
 8000d00:	4629      	mov	r1, r5
 8000d02:	4630      	mov	r0, r6
 8000d04:	f7ff ffa6 	bl	8000c54 <sbrk_aligned>
 8000d08:	3001      	adds	r0, #1
 8000d0a:	d03a      	beq.n	8000d82 <_malloc_r+0xea>
 8000d0c:	6823      	ldr	r3, [r4, #0]
 8000d0e:	442b      	add	r3, r5
 8000d10:	6023      	str	r3, [r4, #0]
 8000d12:	f8d8 3000 	ldr.w	r3, [r8]
 8000d16:	685a      	ldr	r2, [r3, #4]
 8000d18:	bb62      	cbnz	r2, 8000d74 <_malloc_r+0xdc>
 8000d1a:	f8c8 7000 	str.w	r7, [r8]
 8000d1e:	e00f      	b.n	8000d40 <_malloc_r+0xa8>
 8000d20:	6822      	ldr	r2, [r4, #0]
 8000d22:	1b52      	subs	r2, r2, r5
 8000d24:	d420      	bmi.n	8000d68 <_malloc_r+0xd0>
 8000d26:	2a0b      	cmp	r2, #11
 8000d28:	d917      	bls.n	8000d5a <_malloc_r+0xc2>
 8000d2a:	1961      	adds	r1, r4, r5
 8000d2c:	42a3      	cmp	r3, r4
 8000d2e:	6025      	str	r5, [r4, #0]
 8000d30:	bf18      	it	ne
 8000d32:	6059      	strne	r1, [r3, #4]
 8000d34:	6863      	ldr	r3, [r4, #4]
 8000d36:	bf08      	it	eq
 8000d38:	f8c8 1000 	streq.w	r1, [r8]
 8000d3c:	5162      	str	r2, [r4, r5]
 8000d3e:	604b      	str	r3, [r1, #4]
 8000d40:	4630      	mov	r0, r6
 8000d42:	f000 f82f 	bl	8000da4 <__malloc_unlock>
 8000d46:	f104 000b 	add.w	r0, r4, #11
 8000d4a:	1d23      	adds	r3, r4, #4
 8000d4c:	f020 0007 	bic.w	r0, r0, #7
 8000d50:	1ac2      	subs	r2, r0, r3
 8000d52:	bf1c      	itt	ne
 8000d54:	1a1b      	subne	r3, r3, r0
 8000d56:	50a3      	strne	r3, [r4, r2]
 8000d58:	e7af      	b.n	8000cba <_malloc_r+0x22>
 8000d5a:	6862      	ldr	r2, [r4, #4]
 8000d5c:	42a3      	cmp	r3, r4
 8000d5e:	bf0c      	ite	eq
 8000d60:	f8c8 2000 	streq.w	r2, [r8]
 8000d64:	605a      	strne	r2, [r3, #4]
 8000d66:	e7eb      	b.n	8000d40 <_malloc_r+0xa8>
 8000d68:	4623      	mov	r3, r4
 8000d6a:	6864      	ldr	r4, [r4, #4]
 8000d6c:	e7ae      	b.n	8000ccc <_malloc_r+0x34>
 8000d6e:	463c      	mov	r4, r7
 8000d70:	687f      	ldr	r7, [r7, #4]
 8000d72:	e7b6      	b.n	8000ce2 <_malloc_r+0x4a>
 8000d74:	461a      	mov	r2, r3
 8000d76:	685b      	ldr	r3, [r3, #4]
 8000d78:	42a3      	cmp	r3, r4
 8000d7a:	d1fb      	bne.n	8000d74 <_malloc_r+0xdc>
 8000d7c:	2300      	movs	r3, #0
 8000d7e:	6053      	str	r3, [r2, #4]
 8000d80:	e7de      	b.n	8000d40 <_malloc_r+0xa8>
 8000d82:	230c      	movs	r3, #12
 8000d84:	6033      	str	r3, [r6, #0]
 8000d86:	4630      	mov	r0, r6
 8000d88:	f000 f80c 	bl	8000da4 <__malloc_unlock>
 8000d8c:	e794      	b.n	8000cb8 <_malloc_r+0x20>
 8000d8e:	6005      	str	r5, [r0, #0]
 8000d90:	e7d6      	b.n	8000d40 <_malloc_r+0xa8>
 8000d92:	bf00      	nop
 8000d94:	200001cc 	.word	0x200001cc

08000d98 <__malloc_lock>:
 8000d98:	4801      	ldr	r0, [pc, #4]	@ (8000da0 <__malloc_lock+0x8>)
 8000d9a:	f7ff bf0e 	b.w	8000bba <__retarget_lock_acquire_recursive>
 8000d9e:	bf00      	nop
 8000da0:	200001c4 	.word	0x200001c4

08000da4 <__malloc_unlock>:
 8000da4:	4801      	ldr	r0, [pc, #4]	@ (8000dac <__malloc_unlock+0x8>)
 8000da6:	f7ff bf09 	b.w	8000bbc <__retarget_lock_release_recursive>
 8000daa:	bf00      	nop
 8000dac:	200001c4 	.word	0x200001c4

08000db0 <__sfputc_r>:
 8000db0:	6893      	ldr	r3, [r2, #8]
 8000db2:	3b01      	subs	r3, #1
 8000db4:	2b00      	cmp	r3, #0
 8000db6:	b410      	push	{r4}
 8000db8:	6093      	str	r3, [r2, #8]
 8000dba:	da08      	bge.n	8000dce <__sfputc_r+0x1e>
 8000dbc:	6994      	ldr	r4, [r2, #24]
 8000dbe:	42a3      	cmp	r3, r4
 8000dc0:	db01      	blt.n	8000dc6 <__sfputc_r+0x16>
 8000dc2:	290a      	cmp	r1, #10
 8000dc4:	d103      	bne.n	8000dce <__sfputc_r+0x1e>
 8000dc6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000dca:	f7ff bde8 	b.w	800099e <__swbuf_r>
 8000dce:	6813      	ldr	r3, [r2, #0]
 8000dd0:	1c58      	adds	r0, r3, #1
 8000dd2:	6010      	str	r0, [r2, #0]
 8000dd4:	7019      	strb	r1, [r3, #0]
 8000dd6:	4608      	mov	r0, r1
 8000dd8:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000ddc:	4770      	bx	lr

08000dde <__sfputs_r>:
 8000dde:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000de0:	4606      	mov	r6, r0
 8000de2:	460f      	mov	r7, r1
 8000de4:	4614      	mov	r4, r2
 8000de6:	18d5      	adds	r5, r2, r3
 8000de8:	42ac      	cmp	r4, r5
 8000dea:	d101      	bne.n	8000df0 <__sfputs_r+0x12>
 8000dec:	2000      	movs	r0, #0
 8000dee:	e007      	b.n	8000e00 <__sfputs_r+0x22>
 8000df0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000df4:	463a      	mov	r2, r7
 8000df6:	4630      	mov	r0, r6
 8000df8:	f7ff ffda 	bl	8000db0 <__sfputc_r>
 8000dfc:	1c43      	adds	r3, r0, #1
 8000dfe:	d1f3      	bne.n	8000de8 <__sfputs_r+0xa>
 8000e00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000e04 <_vfiprintf_r>:
 8000e04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000e08:	460d      	mov	r5, r1
 8000e0a:	b09d      	sub	sp, #116	@ 0x74
 8000e0c:	4614      	mov	r4, r2
 8000e0e:	4698      	mov	r8, r3
 8000e10:	4606      	mov	r6, r0
 8000e12:	b118      	cbz	r0, 8000e1c <_vfiprintf_r+0x18>
 8000e14:	6a03      	ldr	r3, [r0, #32]
 8000e16:	b90b      	cbnz	r3, 8000e1c <_vfiprintf_r+0x18>
 8000e18:	f7ff fcd8 	bl	80007cc <__sinit>
 8000e1c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000e1e:	07d9      	lsls	r1, r3, #31
 8000e20:	d405      	bmi.n	8000e2e <_vfiprintf_r+0x2a>
 8000e22:	89ab      	ldrh	r3, [r5, #12]
 8000e24:	059a      	lsls	r2, r3, #22
 8000e26:	d402      	bmi.n	8000e2e <_vfiprintf_r+0x2a>
 8000e28:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000e2a:	f7ff fec6 	bl	8000bba <__retarget_lock_acquire_recursive>
 8000e2e:	89ab      	ldrh	r3, [r5, #12]
 8000e30:	071b      	lsls	r3, r3, #28
 8000e32:	d501      	bpl.n	8000e38 <_vfiprintf_r+0x34>
 8000e34:	692b      	ldr	r3, [r5, #16]
 8000e36:	b99b      	cbnz	r3, 8000e60 <_vfiprintf_r+0x5c>
 8000e38:	4629      	mov	r1, r5
 8000e3a:	4630      	mov	r0, r6
 8000e3c:	f7ff fdee 	bl	8000a1c <__swsetup_r>
 8000e40:	b170      	cbz	r0, 8000e60 <_vfiprintf_r+0x5c>
 8000e42:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000e44:	07dc      	lsls	r4, r3, #31
 8000e46:	d504      	bpl.n	8000e52 <_vfiprintf_r+0x4e>
 8000e48:	f04f 30ff 	mov.w	r0, #4294967295
 8000e4c:	b01d      	add	sp, #116	@ 0x74
 8000e4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000e52:	89ab      	ldrh	r3, [r5, #12]
 8000e54:	0598      	lsls	r0, r3, #22
 8000e56:	d4f7      	bmi.n	8000e48 <_vfiprintf_r+0x44>
 8000e58:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000e5a:	f7ff feaf 	bl	8000bbc <__retarget_lock_release_recursive>
 8000e5e:	e7f3      	b.n	8000e48 <_vfiprintf_r+0x44>
 8000e60:	2300      	movs	r3, #0
 8000e62:	9309      	str	r3, [sp, #36]	@ 0x24
 8000e64:	2320      	movs	r3, #32
 8000e66:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000e6a:	f8cd 800c 	str.w	r8, [sp, #12]
 8000e6e:	2330      	movs	r3, #48	@ 0x30
 8000e70:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8001020 <_vfiprintf_r+0x21c>
 8000e74:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000e78:	f04f 0901 	mov.w	r9, #1
 8000e7c:	4623      	mov	r3, r4
 8000e7e:	469a      	mov	sl, r3
 8000e80:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000e84:	b10a      	cbz	r2, 8000e8a <_vfiprintf_r+0x86>
 8000e86:	2a25      	cmp	r2, #37	@ 0x25
 8000e88:	d1f9      	bne.n	8000e7e <_vfiprintf_r+0x7a>
 8000e8a:	ebba 0b04 	subs.w	fp, sl, r4
 8000e8e:	d00b      	beq.n	8000ea8 <_vfiprintf_r+0xa4>
 8000e90:	465b      	mov	r3, fp
 8000e92:	4622      	mov	r2, r4
 8000e94:	4629      	mov	r1, r5
 8000e96:	4630      	mov	r0, r6
 8000e98:	f7ff ffa1 	bl	8000dde <__sfputs_r>
 8000e9c:	3001      	adds	r0, #1
 8000e9e:	f000 80a7 	beq.w	8000ff0 <_vfiprintf_r+0x1ec>
 8000ea2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000ea4:	445a      	add	r2, fp
 8000ea6:	9209      	str	r2, [sp, #36]	@ 0x24
 8000ea8:	f89a 3000 	ldrb.w	r3, [sl]
 8000eac:	2b00      	cmp	r3, #0
 8000eae:	f000 809f 	beq.w	8000ff0 <_vfiprintf_r+0x1ec>
 8000eb2:	2300      	movs	r3, #0
 8000eb4:	f04f 32ff 	mov.w	r2, #4294967295
 8000eb8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000ebc:	f10a 0a01 	add.w	sl, sl, #1
 8000ec0:	9304      	str	r3, [sp, #16]
 8000ec2:	9307      	str	r3, [sp, #28]
 8000ec4:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000ec8:	931a      	str	r3, [sp, #104]	@ 0x68
 8000eca:	4654      	mov	r4, sl
 8000ecc:	2205      	movs	r2, #5
 8000ece:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ed2:	4853      	ldr	r0, [pc, #332]	@ (8001020 <_vfiprintf_r+0x21c>)
 8000ed4:	f7ff f984 	bl	80001e0 <memchr>
 8000ed8:	9a04      	ldr	r2, [sp, #16]
 8000eda:	b9d8      	cbnz	r0, 8000f14 <_vfiprintf_r+0x110>
 8000edc:	06d1      	lsls	r1, r2, #27
 8000ede:	bf44      	itt	mi
 8000ee0:	2320      	movmi	r3, #32
 8000ee2:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000ee6:	0713      	lsls	r3, r2, #28
 8000ee8:	bf44      	itt	mi
 8000eea:	232b      	movmi	r3, #43	@ 0x2b
 8000eec:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000ef0:	f89a 3000 	ldrb.w	r3, [sl]
 8000ef4:	2b2a      	cmp	r3, #42	@ 0x2a
 8000ef6:	d015      	beq.n	8000f24 <_vfiprintf_r+0x120>
 8000ef8:	9a07      	ldr	r2, [sp, #28]
 8000efa:	4654      	mov	r4, sl
 8000efc:	2000      	movs	r0, #0
 8000efe:	f04f 0c0a 	mov.w	ip, #10
 8000f02:	4621      	mov	r1, r4
 8000f04:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000f08:	3b30      	subs	r3, #48	@ 0x30
 8000f0a:	2b09      	cmp	r3, #9
 8000f0c:	d94b      	bls.n	8000fa6 <_vfiprintf_r+0x1a2>
 8000f0e:	b1b0      	cbz	r0, 8000f3e <_vfiprintf_r+0x13a>
 8000f10:	9207      	str	r2, [sp, #28]
 8000f12:	e014      	b.n	8000f3e <_vfiprintf_r+0x13a>
 8000f14:	eba0 0308 	sub.w	r3, r0, r8
 8000f18:	fa09 f303 	lsl.w	r3, r9, r3
 8000f1c:	4313      	orrs	r3, r2
 8000f1e:	9304      	str	r3, [sp, #16]
 8000f20:	46a2      	mov	sl, r4
 8000f22:	e7d2      	b.n	8000eca <_vfiprintf_r+0xc6>
 8000f24:	9b03      	ldr	r3, [sp, #12]
 8000f26:	1d19      	adds	r1, r3, #4
 8000f28:	681b      	ldr	r3, [r3, #0]
 8000f2a:	9103      	str	r1, [sp, #12]
 8000f2c:	2b00      	cmp	r3, #0
 8000f2e:	bfbb      	ittet	lt
 8000f30:	425b      	neglt	r3, r3
 8000f32:	f042 0202 	orrlt.w	r2, r2, #2
 8000f36:	9307      	strge	r3, [sp, #28]
 8000f38:	9307      	strlt	r3, [sp, #28]
 8000f3a:	bfb8      	it	lt
 8000f3c:	9204      	strlt	r2, [sp, #16]
 8000f3e:	7823      	ldrb	r3, [r4, #0]
 8000f40:	2b2e      	cmp	r3, #46	@ 0x2e
 8000f42:	d10a      	bne.n	8000f5a <_vfiprintf_r+0x156>
 8000f44:	7863      	ldrb	r3, [r4, #1]
 8000f46:	2b2a      	cmp	r3, #42	@ 0x2a
 8000f48:	d132      	bne.n	8000fb0 <_vfiprintf_r+0x1ac>
 8000f4a:	9b03      	ldr	r3, [sp, #12]
 8000f4c:	1d1a      	adds	r2, r3, #4
 8000f4e:	681b      	ldr	r3, [r3, #0]
 8000f50:	9203      	str	r2, [sp, #12]
 8000f52:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000f56:	3402      	adds	r4, #2
 8000f58:	9305      	str	r3, [sp, #20]
 8000f5a:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8001030 <_vfiprintf_r+0x22c>
 8000f5e:	7821      	ldrb	r1, [r4, #0]
 8000f60:	2203      	movs	r2, #3
 8000f62:	4650      	mov	r0, sl
 8000f64:	f7ff f93c 	bl	80001e0 <memchr>
 8000f68:	b138      	cbz	r0, 8000f7a <_vfiprintf_r+0x176>
 8000f6a:	9b04      	ldr	r3, [sp, #16]
 8000f6c:	eba0 000a 	sub.w	r0, r0, sl
 8000f70:	2240      	movs	r2, #64	@ 0x40
 8000f72:	4082      	lsls	r2, r0
 8000f74:	4313      	orrs	r3, r2
 8000f76:	3401      	adds	r4, #1
 8000f78:	9304      	str	r3, [sp, #16]
 8000f7a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000f7e:	4829      	ldr	r0, [pc, #164]	@ (8001024 <_vfiprintf_r+0x220>)
 8000f80:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000f84:	2206      	movs	r2, #6
 8000f86:	f7ff f92b 	bl	80001e0 <memchr>
 8000f8a:	2800      	cmp	r0, #0
 8000f8c:	d03f      	beq.n	800100e <_vfiprintf_r+0x20a>
 8000f8e:	4b26      	ldr	r3, [pc, #152]	@ (8001028 <_vfiprintf_r+0x224>)
 8000f90:	bb1b      	cbnz	r3, 8000fda <_vfiprintf_r+0x1d6>
 8000f92:	9b03      	ldr	r3, [sp, #12]
 8000f94:	3307      	adds	r3, #7
 8000f96:	f023 0307 	bic.w	r3, r3, #7
 8000f9a:	3308      	adds	r3, #8
 8000f9c:	9303      	str	r3, [sp, #12]
 8000f9e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000fa0:	443b      	add	r3, r7
 8000fa2:	9309      	str	r3, [sp, #36]	@ 0x24
 8000fa4:	e76a      	b.n	8000e7c <_vfiprintf_r+0x78>
 8000fa6:	fb0c 3202 	mla	r2, ip, r2, r3
 8000faa:	460c      	mov	r4, r1
 8000fac:	2001      	movs	r0, #1
 8000fae:	e7a8      	b.n	8000f02 <_vfiprintf_r+0xfe>
 8000fb0:	2300      	movs	r3, #0
 8000fb2:	3401      	adds	r4, #1
 8000fb4:	9305      	str	r3, [sp, #20]
 8000fb6:	4619      	mov	r1, r3
 8000fb8:	f04f 0c0a 	mov.w	ip, #10
 8000fbc:	4620      	mov	r0, r4
 8000fbe:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000fc2:	3a30      	subs	r2, #48	@ 0x30
 8000fc4:	2a09      	cmp	r2, #9
 8000fc6:	d903      	bls.n	8000fd0 <_vfiprintf_r+0x1cc>
 8000fc8:	2b00      	cmp	r3, #0
 8000fca:	d0c6      	beq.n	8000f5a <_vfiprintf_r+0x156>
 8000fcc:	9105      	str	r1, [sp, #20]
 8000fce:	e7c4      	b.n	8000f5a <_vfiprintf_r+0x156>
 8000fd0:	fb0c 2101 	mla	r1, ip, r1, r2
 8000fd4:	4604      	mov	r4, r0
 8000fd6:	2301      	movs	r3, #1
 8000fd8:	e7f0      	b.n	8000fbc <_vfiprintf_r+0x1b8>
 8000fda:	ab03      	add	r3, sp, #12
 8000fdc:	9300      	str	r3, [sp, #0]
 8000fde:	462a      	mov	r2, r5
 8000fe0:	4b12      	ldr	r3, [pc, #72]	@ (800102c <_vfiprintf_r+0x228>)
 8000fe2:	a904      	add	r1, sp, #16
 8000fe4:	4630      	mov	r0, r6
 8000fe6:	f3af 8000 	nop.w
 8000fea:	4607      	mov	r7, r0
 8000fec:	1c78      	adds	r0, r7, #1
 8000fee:	d1d6      	bne.n	8000f9e <_vfiprintf_r+0x19a>
 8000ff0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000ff2:	07d9      	lsls	r1, r3, #31
 8000ff4:	d405      	bmi.n	8001002 <_vfiprintf_r+0x1fe>
 8000ff6:	89ab      	ldrh	r3, [r5, #12]
 8000ff8:	059a      	lsls	r2, r3, #22
 8000ffa:	d402      	bmi.n	8001002 <_vfiprintf_r+0x1fe>
 8000ffc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000ffe:	f7ff fddd 	bl	8000bbc <__retarget_lock_release_recursive>
 8001002:	89ab      	ldrh	r3, [r5, #12]
 8001004:	065b      	lsls	r3, r3, #25
 8001006:	f53f af1f 	bmi.w	8000e48 <_vfiprintf_r+0x44>
 800100a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800100c:	e71e      	b.n	8000e4c <_vfiprintf_r+0x48>
 800100e:	ab03      	add	r3, sp, #12
 8001010:	9300      	str	r3, [sp, #0]
 8001012:	462a      	mov	r2, r5
 8001014:	4b05      	ldr	r3, [pc, #20]	@ (800102c <_vfiprintf_r+0x228>)
 8001016:	a904      	add	r1, sp, #16
 8001018:	4630      	mov	r0, r6
 800101a:	f000 f879 	bl	8001110 <_printf_i>
 800101e:	e7e4      	b.n	8000fea <_vfiprintf_r+0x1e6>
 8001020:	08001627 	.word	0x08001627
 8001024:	08001631 	.word	0x08001631
 8001028:	00000000 	.word	0x00000000
 800102c:	08000ddf 	.word	0x08000ddf
 8001030:	0800162d 	.word	0x0800162d

08001034 <_printf_common>:
 8001034:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001038:	4616      	mov	r6, r2
 800103a:	4698      	mov	r8, r3
 800103c:	688a      	ldr	r2, [r1, #8]
 800103e:	690b      	ldr	r3, [r1, #16]
 8001040:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8001044:	4293      	cmp	r3, r2
 8001046:	bfb8      	it	lt
 8001048:	4613      	movlt	r3, r2
 800104a:	6033      	str	r3, [r6, #0]
 800104c:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8001050:	4607      	mov	r7, r0
 8001052:	460c      	mov	r4, r1
 8001054:	b10a      	cbz	r2, 800105a <_printf_common+0x26>
 8001056:	3301      	adds	r3, #1
 8001058:	6033      	str	r3, [r6, #0]
 800105a:	6823      	ldr	r3, [r4, #0]
 800105c:	0699      	lsls	r1, r3, #26
 800105e:	bf42      	ittt	mi
 8001060:	6833      	ldrmi	r3, [r6, #0]
 8001062:	3302      	addmi	r3, #2
 8001064:	6033      	strmi	r3, [r6, #0]
 8001066:	6825      	ldr	r5, [r4, #0]
 8001068:	f015 0506 	ands.w	r5, r5, #6
 800106c:	d106      	bne.n	800107c <_printf_common+0x48>
 800106e:	f104 0a19 	add.w	sl, r4, #25
 8001072:	68e3      	ldr	r3, [r4, #12]
 8001074:	6832      	ldr	r2, [r6, #0]
 8001076:	1a9b      	subs	r3, r3, r2
 8001078:	42ab      	cmp	r3, r5
 800107a:	dc26      	bgt.n	80010ca <_printf_common+0x96>
 800107c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8001080:	6822      	ldr	r2, [r4, #0]
 8001082:	3b00      	subs	r3, #0
 8001084:	bf18      	it	ne
 8001086:	2301      	movne	r3, #1
 8001088:	0692      	lsls	r2, r2, #26
 800108a:	d42b      	bmi.n	80010e4 <_printf_common+0xb0>
 800108c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8001090:	4641      	mov	r1, r8
 8001092:	4638      	mov	r0, r7
 8001094:	47c8      	blx	r9
 8001096:	3001      	adds	r0, #1
 8001098:	d01e      	beq.n	80010d8 <_printf_common+0xa4>
 800109a:	6823      	ldr	r3, [r4, #0]
 800109c:	6922      	ldr	r2, [r4, #16]
 800109e:	f003 0306 	and.w	r3, r3, #6
 80010a2:	2b04      	cmp	r3, #4
 80010a4:	bf02      	ittt	eq
 80010a6:	68e5      	ldreq	r5, [r4, #12]
 80010a8:	6833      	ldreq	r3, [r6, #0]
 80010aa:	1aed      	subeq	r5, r5, r3
 80010ac:	68a3      	ldr	r3, [r4, #8]
 80010ae:	bf0c      	ite	eq
 80010b0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80010b4:	2500      	movne	r5, #0
 80010b6:	4293      	cmp	r3, r2
 80010b8:	bfc4      	itt	gt
 80010ba:	1a9b      	subgt	r3, r3, r2
 80010bc:	18ed      	addgt	r5, r5, r3
 80010be:	2600      	movs	r6, #0
 80010c0:	341a      	adds	r4, #26
 80010c2:	42b5      	cmp	r5, r6
 80010c4:	d11a      	bne.n	80010fc <_printf_common+0xc8>
 80010c6:	2000      	movs	r0, #0
 80010c8:	e008      	b.n	80010dc <_printf_common+0xa8>
 80010ca:	2301      	movs	r3, #1
 80010cc:	4652      	mov	r2, sl
 80010ce:	4641      	mov	r1, r8
 80010d0:	4638      	mov	r0, r7
 80010d2:	47c8      	blx	r9
 80010d4:	3001      	adds	r0, #1
 80010d6:	d103      	bne.n	80010e0 <_printf_common+0xac>
 80010d8:	f04f 30ff 	mov.w	r0, #4294967295
 80010dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80010e0:	3501      	adds	r5, #1
 80010e2:	e7c6      	b.n	8001072 <_printf_common+0x3e>
 80010e4:	18e1      	adds	r1, r4, r3
 80010e6:	1c5a      	adds	r2, r3, #1
 80010e8:	2030      	movs	r0, #48	@ 0x30
 80010ea:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80010ee:	4422      	add	r2, r4
 80010f0:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80010f4:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80010f8:	3302      	adds	r3, #2
 80010fa:	e7c7      	b.n	800108c <_printf_common+0x58>
 80010fc:	2301      	movs	r3, #1
 80010fe:	4622      	mov	r2, r4
 8001100:	4641      	mov	r1, r8
 8001102:	4638      	mov	r0, r7
 8001104:	47c8      	blx	r9
 8001106:	3001      	adds	r0, #1
 8001108:	d0e6      	beq.n	80010d8 <_printf_common+0xa4>
 800110a:	3601      	adds	r6, #1
 800110c:	e7d9      	b.n	80010c2 <_printf_common+0x8e>
	...

08001110 <_printf_i>:
 8001110:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001114:	7e0f      	ldrb	r7, [r1, #24]
 8001116:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8001118:	2f78      	cmp	r7, #120	@ 0x78
 800111a:	4691      	mov	r9, r2
 800111c:	4680      	mov	r8, r0
 800111e:	460c      	mov	r4, r1
 8001120:	469a      	mov	sl, r3
 8001122:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8001126:	d807      	bhi.n	8001138 <_printf_i+0x28>
 8001128:	2f62      	cmp	r7, #98	@ 0x62
 800112a:	d80a      	bhi.n	8001142 <_printf_i+0x32>
 800112c:	2f00      	cmp	r7, #0
 800112e:	f000 80d2 	beq.w	80012d6 <_printf_i+0x1c6>
 8001132:	2f58      	cmp	r7, #88	@ 0x58
 8001134:	f000 80b9 	beq.w	80012aa <_printf_i+0x19a>
 8001138:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800113c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8001140:	e03a      	b.n	80011b8 <_printf_i+0xa8>
 8001142:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8001146:	2b15      	cmp	r3, #21
 8001148:	d8f6      	bhi.n	8001138 <_printf_i+0x28>
 800114a:	a101      	add	r1, pc, #4	@ (adr r1, 8001150 <_printf_i+0x40>)
 800114c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001150:	080011a9 	.word	0x080011a9
 8001154:	080011bd 	.word	0x080011bd
 8001158:	08001139 	.word	0x08001139
 800115c:	08001139 	.word	0x08001139
 8001160:	08001139 	.word	0x08001139
 8001164:	08001139 	.word	0x08001139
 8001168:	080011bd 	.word	0x080011bd
 800116c:	08001139 	.word	0x08001139
 8001170:	08001139 	.word	0x08001139
 8001174:	08001139 	.word	0x08001139
 8001178:	08001139 	.word	0x08001139
 800117c:	080012bd 	.word	0x080012bd
 8001180:	080011e7 	.word	0x080011e7
 8001184:	08001277 	.word	0x08001277
 8001188:	08001139 	.word	0x08001139
 800118c:	08001139 	.word	0x08001139
 8001190:	080012df 	.word	0x080012df
 8001194:	08001139 	.word	0x08001139
 8001198:	080011e7 	.word	0x080011e7
 800119c:	08001139 	.word	0x08001139
 80011a0:	08001139 	.word	0x08001139
 80011a4:	0800127f 	.word	0x0800127f
 80011a8:	6833      	ldr	r3, [r6, #0]
 80011aa:	1d1a      	adds	r2, r3, #4
 80011ac:	681b      	ldr	r3, [r3, #0]
 80011ae:	6032      	str	r2, [r6, #0]
 80011b0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80011b4:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80011b8:	2301      	movs	r3, #1
 80011ba:	e09d      	b.n	80012f8 <_printf_i+0x1e8>
 80011bc:	6833      	ldr	r3, [r6, #0]
 80011be:	6820      	ldr	r0, [r4, #0]
 80011c0:	1d19      	adds	r1, r3, #4
 80011c2:	6031      	str	r1, [r6, #0]
 80011c4:	0606      	lsls	r6, r0, #24
 80011c6:	d501      	bpl.n	80011cc <_printf_i+0xbc>
 80011c8:	681d      	ldr	r5, [r3, #0]
 80011ca:	e003      	b.n	80011d4 <_printf_i+0xc4>
 80011cc:	0645      	lsls	r5, r0, #25
 80011ce:	d5fb      	bpl.n	80011c8 <_printf_i+0xb8>
 80011d0:	f9b3 5000 	ldrsh.w	r5, [r3]
 80011d4:	2d00      	cmp	r5, #0
 80011d6:	da03      	bge.n	80011e0 <_printf_i+0xd0>
 80011d8:	232d      	movs	r3, #45	@ 0x2d
 80011da:	426d      	negs	r5, r5
 80011dc:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80011e0:	4859      	ldr	r0, [pc, #356]	@ (8001348 <_printf_i+0x238>)
 80011e2:	230a      	movs	r3, #10
 80011e4:	e011      	b.n	800120a <_printf_i+0xfa>
 80011e6:	6821      	ldr	r1, [r4, #0]
 80011e8:	6833      	ldr	r3, [r6, #0]
 80011ea:	0608      	lsls	r0, r1, #24
 80011ec:	f853 5b04 	ldr.w	r5, [r3], #4
 80011f0:	d402      	bmi.n	80011f8 <_printf_i+0xe8>
 80011f2:	0649      	lsls	r1, r1, #25
 80011f4:	bf48      	it	mi
 80011f6:	b2ad      	uxthmi	r5, r5
 80011f8:	2f6f      	cmp	r7, #111	@ 0x6f
 80011fa:	4853      	ldr	r0, [pc, #332]	@ (8001348 <_printf_i+0x238>)
 80011fc:	6033      	str	r3, [r6, #0]
 80011fe:	bf14      	ite	ne
 8001200:	230a      	movne	r3, #10
 8001202:	2308      	moveq	r3, #8
 8001204:	2100      	movs	r1, #0
 8001206:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800120a:	6866      	ldr	r6, [r4, #4]
 800120c:	60a6      	str	r6, [r4, #8]
 800120e:	2e00      	cmp	r6, #0
 8001210:	bfa2      	ittt	ge
 8001212:	6821      	ldrge	r1, [r4, #0]
 8001214:	f021 0104 	bicge.w	r1, r1, #4
 8001218:	6021      	strge	r1, [r4, #0]
 800121a:	b90d      	cbnz	r5, 8001220 <_printf_i+0x110>
 800121c:	2e00      	cmp	r6, #0
 800121e:	d04b      	beq.n	80012b8 <_printf_i+0x1a8>
 8001220:	4616      	mov	r6, r2
 8001222:	fbb5 f1f3 	udiv	r1, r5, r3
 8001226:	fb03 5711 	mls	r7, r3, r1, r5
 800122a:	5dc7      	ldrb	r7, [r0, r7]
 800122c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001230:	462f      	mov	r7, r5
 8001232:	42bb      	cmp	r3, r7
 8001234:	460d      	mov	r5, r1
 8001236:	d9f4      	bls.n	8001222 <_printf_i+0x112>
 8001238:	2b08      	cmp	r3, #8
 800123a:	d10b      	bne.n	8001254 <_printf_i+0x144>
 800123c:	6823      	ldr	r3, [r4, #0]
 800123e:	07df      	lsls	r7, r3, #31
 8001240:	d508      	bpl.n	8001254 <_printf_i+0x144>
 8001242:	6923      	ldr	r3, [r4, #16]
 8001244:	6861      	ldr	r1, [r4, #4]
 8001246:	4299      	cmp	r1, r3
 8001248:	bfde      	ittt	le
 800124a:	2330      	movle	r3, #48	@ 0x30
 800124c:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001250:	f106 36ff 	addle.w	r6, r6, #4294967295
 8001254:	1b92      	subs	r2, r2, r6
 8001256:	6122      	str	r2, [r4, #16]
 8001258:	f8cd a000 	str.w	sl, [sp]
 800125c:	464b      	mov	r3, r9
 800125e:	aa03      	add	r2, sp, #12
 8001260:	4621      	mov	r1, r4
 8001262:	4640      	mov	r0, r8
 8001264:	f7ff fee6 	bl	8001034 <_printf_common>
 8001268:	3001      	adds	r0, #1
 800126a:	d14a      	bne.n	8001302 <_printf_i+0x1f2>
 800126c:	f04f 30ff 	mov.w	r0, #4294967295
 8001270:	b004      	add	sp, #16
 8001272:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001276:	6823      	ldr	r3, [r4, #0]
 8001278:	f043 0320 	orr.w	r3, r3, #32
 800127c:	6023      	str	r3, [r4, #0]
 800127e:	4833      	ldr	r0, [pc, #204]	@ (800134c <_printf_i+0x23c>)
 8001280:	2778      	movs	r7, #120	@ 0x78
 8001282:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8001286:	6823      	ldr	r3, [r4, #0]
 8001288:	6831      	ldr	r1, [r6, #0]
 800128a:	061f      	lsls	r7, r3, #24
 800128c:	f851 5b04 	ldr.w	r5, [r1], #4
 8001290:	d402      	bmi.n	8001298 <_printf_i+0x188>
 8001292:	065f      	lsls	r7, r3, #25
 8001294:	bf48      	it	mi
 8001296:	b2ad      	uxthmi	r5, r5
 8001298:	6031      	str	r1, [r6, #0]
 800129a:	07d9      	lsls	r1, r3, #31
 800129c:	bf44      	itt	mi
 800129e:	f043 0320 	orrmi.w	r3, r3, #32
 80012a2:	6023      	strmi	r3, [r4, #0]
 80012a4:	b11d      	cbz	r5, 80012ae <_printf_i+0x19e>
 80012a6:	2310      	movs	r3, #16
 80012a8:	e7ac      	b.n	8001204 <_printf_i+0xf4>
 80012aa:	4827      	ldr	r0, [pc, #156]	@ (8001348 <_printf_i+0x238>)
 80012ac:	e7e9      	b.n	8001282 <_printf_i+0x172>
 80012ae:	6823      	ldr	r3, [r4, #0]
 80012b0:	f023 0320 	bic.w	r3, r3, #32
 80012b4:	6023      	str	r3, [r4, #0]
 80012b6:	e7f6      	b.n	80012a6 <_printf_i+0x196>
 80012b8:	4616      	mov	r6, r2
 80012ba:	e7bd      	b.n	8001238 <_printf_i+0x128>
 80012bc:	6833      	ldr	r3, [r6, #0]
 80012be:	6825      	ldr	r5, [r4, #0]
 80012c0:	6961      	ldr	r1, [r4, #20]
 80012c2:	1d18      	adds	r0, r3, #4
 80012c4:	6030      	str	r0, [r6, #0]
 80012c6:	062e      	lsls	r6, r5, #24
 80012c8:	681b      	ldr	r3, [r3, #0]
 80012ca:	d501      	bpl.n	80012d0 <_printf_i+0x1c0>
 80012cc:	6019      	str	r1, [r3, #0]
 80012ce:	e002      	b.n	80012d6 <_printf_i+0x1c6>
 80012d0:	0668      	lsls	r0, r5, #25
 80012d2:	d5fb      	bpl.n	80012cc <_printf_i+0x1bc>
 80012d4:	8019      	strh	r1, [r3, #0]
 80012d6:	2300      	movs	r3, #0
 80012d8:	6123      	str	r3, [r4, #16]
 80012da:	4616      	mov	r6, r2
 80012dc:	e7bc      	b.n	8001258 <_printf_i+0x148>
 80012de:	6833      	ldr	r3, [r6, #0]
 80012e0:	1d1a      	adds	r2, r3, #4
 80012e2:	6032      	str	r2, [r6, #0]
 80012e4:	681e      	ldr	r6, [r3, #0]
 80012e6:	6862      	ldr	r2, [r4, #4]
 80012e8:	2100      	movs	r1, #0
 80012ea:	4630      	mov	r0, r6
 80012ec:	f7fe ff78 	bl	80001e0 <memchr>
 80012f0:	b108      	cbz	r0, 80012f6 <_printf_i+0x1e6>
 80012f2:	1b80      	subs	r0, r0, r6
 80012f4:	6060      	str	r0, [r4, #4]
 80012f6:	6863      	ldr	r3, [r4, #4]
 80012f8:	6123      	str	r3, [r4, #16]
 80012fa:	2300      	movs	r3, #0
 80012fc:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001300:	e7aa      	b.n	8001258 <_printf_i+0x148>
 8001302:	6923      	ldr	r3, [r4, #16]
 8001304:	4632      	mov	r2, r6
 8001306:	4649      	mov	r1, r9
 8001308:	4640      	mov	r0, r8
 800130a:	47d0      	blx	sl
 800130c:	3001      	adds	r0, #1
 800130e:	d0ad      	beq.n	800126c <_printf_i+0x15c>
 8001310:	6823      	ldr	r3, [r4, #0]
 8001312:	079b      	lsls	r3, r3, #30
 8001314:	d413      	bmi.n	800133e <_printf_i+0x22e>
 8001316:	68e0      	ldr	r0, [r4, #12]
 8001318:	9b03      	ldr	r3, [sp, #12]
 800131a:	4298      	cmp	r0, r3
 800131c:	bfb8      	it	lt
 800131e:	4618      	movlt	r0, r3
 8001320:	e7a6      	b.n	8001270 <_printf_i+0x160>
 8001322:	2301      	movs	r3, #1
 8001324:	4632      	mov	r2, r6
 8001326:	4649      	mov	r1, r9
 8001328:	4640      	mov	r0, r8
 800132a:	47d0      	blx	sl
 800132c:	3001      	adds	r0, #1
 800132e:	d09d      	beq.n	800126c <_printf_i+0x15c>
 8001330:	3501      	adds	r5, #1
 8001332:	68e3      	ldr	r3, [r4, #12]
 8001334:	9903      	ldr	r1, [sp, #12]
 8001336:	1a5b      	subs	r3, r3, r1
 8001338:	42ab      	cmp	r3, r5
 800133a:	dcf2      	bgt.n	8001322 <_printf_i+0x212>
 800133c:	e7eb      	b.n	8001316 <_printf_i+0x206>
 800133e:	2500      	movs	r5, #0
 8001340:	f104 0619 	add.w	r6, r4, #25
 8001344:	e7f5      	b.n	8001332 <_printf_i+0x222>
 8001346:	bf00      	nop
 8001348:	08001638 	.word	0x08001638
 800134c:	08001649 	.word	0x08001649

08001350 <__sflush_r>:
 8001350:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8001354:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001358:	0716      	lsls	r6, r2, #28
 800135a:	4605      	mov	r5, r0
 800135c:	460c      	mov	r4, r1
 800135e:	d454      	bmi.n	800140a <__sflush_r+0xba>
 8001360:	684b      	ldr	r3, [r1, #4]
 8001362:	2b00      	cmp	r3, #0
 8001364:	dc02      	bgt.n	800136c <__sflush_r+0x1c>
 8001366:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8001368:	2b00      	cmp	r3, #0
 800136a:	dd48      	ble.n	80013fe <__sflush_r+0xae>
 800136c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800136e:	2e00      	cmp	r6, #0
 8001370:	d045      	beq.n	80013fe <__sflush_r+0xae>
 8001372:	2300      	movs	r3, #0
 8001374:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8001378:	682f      	ldr	r7, [r5, #0]
 800137a:	6a21      	ldr	r1, [r4, #32]
 800137c:	602b      	str	r3, [r5, #0]
 800137e:	d030      	beq.n	80013e2 <__sflush_r+0x92>
 8001380:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8001382:	89a3      	ldrh	r3, [r4, #12]
 8001384:	0759      	lsls	r1, r3, #29
 8001386:	d505      	bpl.n	8001394 <__sflush_r+0x44>
 8001388:	6863      	ldr	r3, [r4, #4]
 800138a:	1ad2      	subs	r2, r2, r3
 800138c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800138e:	b10b      	cbz	r3, 8001394 <__sflush_r+0x44>
 8001390:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001392:	1ad2      	subs	r2, r2, r3
 8001394:	2300      	movs	r3, #0
 8001396:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001398:	6a21      	ldr	r1, [r4, #32]
 800139a:	4628      	mov	r0, r5
 800139c:	47b0      	blx	r6
 800139e:	1c43      	adds	r3, r0, #1
 80013a0:	89a3      	ldrh	r3, [r4, #12]
 80013a2:	d106      	bne.n	80013b2 <__sflush_r+0x62>
 80013a4:	6829      	ldr	r1, [r5, #0]
 80013a6:	291d      	cmp	r1, #29
 80013a8:	d82b      	bhi.n	8001402 <__sflush_r+0xb2>
 80013aa:	4a2a      	ldr	r2, [pc, #168]	@ (8001454 <__sflush_r+0x104>)
 80013ac:	410a      	asrs	r2, r1
 80013ae:	07d6      	lsls	r6, r2, #31
 80013b0:	d427      	bmi.n	8001402 <__sflush_r+0xb2>
 80013b2:	2200      	movs	r2, #0
 80013b4:	6062      	str	r2, [r4, #4]
 80013b6:	04d9      	lsls	r1, r3, #19
 80013b8:	6922      	ldr	r2, [r4, #16]
 80013ba:	6022      	str	r2, [r4, #0]
 80013bc:	d504      	bpl.n	80013c8 <__sflush_r+0x78>
 80013be:	1c42      	adds	r2, r0, #1
 80013c0:	d101      	bne.n	80013c6 <__sflush_r+0x76>
 80013c2:	682b      	ldr	r3, [r5, #0]
 80013c4:	b903      	cbnz	r3, 80013c8 <__sflush_r+0x78>
 80013c6:	6560      	str	r0, [r4, #84]	@ 0x54
 80013c8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80013ca:	602f      	str	r7, [r5, #0]
 80013cc:	b1b9      	cbz	r1, 80013fe <__sflush_r+0xae>
 80013ce:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80013d2:	4299      	cmp	r1, r3
 80013d4:	d002      	beq.n	80013dc <__sflush_r+0x8c>
 80013d6:	4628      	mov	r0, r5
 80013d8:	f7ff fbf2 	bl	8000bc0 <_free_r>
 80013dc:	2300      	movs	r3, #0
 80013de:	6363      	str	r3, [r4, #52]	@ 0x34
 80013e0:	e00d      	b.n	80013fe <__sflush_r+0xae>
 80013e2:	2301      	movs	r3, #1
 80013e4:	4628      	mov	r0, r5
 80013e6:	47b0      	blx	r6
 80013e8:	4602      	mov	r2, r0
 80013ea:	1c50      	adds	r0, r2, #1
 80013ec:	d1c9      	bne.n	8001382 <__sflush_r+0x32>
 80013ee:	682b      	ldr	r3, [r5, #0]
 80013f0:	2b00      	cmp	r3, #0
 80013f2:	d0c6      	beq.n	8001382 <__sflush_r+0x32>
 80013f4:	2b1d      	cmp	r3, #29
 80013f6:	d001      	beq.n	80013fc <__sflush_r+0xac>
 80013f8:	2b16      	cmp	r3, #22
 80013fa:	d11e      	bne.n	800143a <__sflush_r+0xea>
 80013fc:	602f      	str	r7, [r5, #0]
 80013fe:	2000      	movs	r0, #0
 8001400:	e022      	b.n	8001448 <__sflush_r+0xf8>
 8001402:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001406:	b21b      	sxth	r3, r3
 8001408:	e01b      	b.n	8001442 <__sflush_r+0xf2>
 800140a:	690f      	ldr	r7, [r1, #16]
 800140c:	2f00      	cmp	r7, #0
 800140e:	d0f6      	beq.n	80013fe <__sflush_r+0xae>
 8001410:	0793      	lsls	r3, r2, #30
 8001412:	680e      	ldr	r6, [r1, #0]
 8001414:	bf08      	it	eq
 8001416:	694b      	ldreq	r3, [r1, #20]
 8001418:	600f      	str	r7, [r1, #0]
 800141a:	bf18      	it	ne
 800141c:	2300      	movne	r3, #0
 800141e:	eba6 0807 	sub.w	r8, r6, r7
 8001422:	608b      	str	r3, [r1, #8]
 8001424:	f1b8 0f00 	cmp.w	r8, #0
 8001428:	dde9      	ble.n	80013fe <__sflush_r+0xae>
 800142a:	6a21      	ldr	r1, [r4, #32]
 800142c:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800142e:	4643      	mov	r3, r8
 8001430:	463a      	mov	r2, r7
 8001432:	4628      	mov	r0, r5
 8001434:	47b0      	blx	r6
 8001436:	2800      	cmp	r0, #0
 8001438:	dc08      	bgt.n	800144c <__sflush_r+0xfc>
 800143a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800143e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001442:	81a3      	strh	r3, [r4, #12]
 8001444:	f04f 30ff 	mov.w	r0, #4294967295
 8001448:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800144c:	4407      	add	r7, r0
 800144e:	eba8 0800 	sub.w	r8, r8, r0
 8001452:	e7e7      	b.n	8001424 <__sflush_r+0xd4>
 8001454:	dfbffffe 	.word	0xdfbffffe

08001458 <_fflush_r>:
 8001458:	b538      	push	{r3, r4, r5, lr}
 800145a:	690b      	ldr	r3, [r1, #16]
 800145c:	4605      	mov	r5, r0
 800145e:	460c      	mov	r4, r1
 8001460:	b913      	cbnz	r3, 8001468 <_fflush_r+0x10>
 8001462:	2500      	movs	r5, #0
 8001464:	4628      	mov	r0, r5
 8001466:	bd38      	pop	{r3, r4, r5, pc}
 8001468:	b118      	cbz	r0, 8001472 <_fflush_r+0x1a>
 800146a:	6a03      	ldr	r3, [r0, #32]
 800146c:	b90b      	cbnz	r3, 8001472 <_fflush_r+0x1a>
 800146e:	f7ff f9ad 	bl	80007cc <__sinit>
 8001472:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001476:	2b00      	cmp	r3, #0
 8001478:	d0f3      	beq.n	8001462 <_fflush_r+0xa>
 800147a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800147c:	07d0      	lsls	r0, r2, #31
 800147e:	d404      	bmi.n	800148a <_fflush_r+0x32>
 8001480:	0599      	lsls	r1, r3, #22
 8001482:	d402      	bmi.n	800148a <_fflush_r+0x32>
 8001484:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001486:	f7ff fb98 	bl	8000bba <__retarget_lock_acquire_recursive>
 800148a:	4628      	mov	r0, r5
 800148c:	4621      	mov	r1, r4
 800148e:	f7ff ff5f 	bl	8001350 <__sflush_r>
 8001492:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001494:	07da      	lsls	r2, r3, #31
 8001496:	4605      	mov	r5, r0
 8001498:	d4e4      	bmi.n	8001464 <_fflush_r+0xc>
 800149a:	89a3      	ldrh	r3, [r4, #12]
 800149c:	059b      	lsls	r3, r3, #22
 800149e:	d4e1      	bmi.n	8001464 <_fflush_r+0xc>
 80014a0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80014a2:	f7ff fb8b 	bl	8000bbc <__retarget_lock_release_recursive>
 80014a6:	e7dd      	b.n	8001464 <_fflush_r+0xc>

080014a8 <__swhatbuf_r>:
 80014a8:	b570      	push	{r4, r5, r6, lr}
 80014aa:	460c      	mov	r4, r1
 80014ac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014b0:	2900      	cmp	r1, #0
 80014b2:	b096      	sub	sp, #88	@ 0x58
 80014b4:	4615      	mov	r5, r2
 80014b6:	461e      	mov	r6, r3
 80014b8:	da0d      	bge.n	80014d6 <__swhatbuf_r+0x2e>
 80014ba:	89a3      	ldrh	r3, [r4, #12]
 80014bc:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80014c0:	f04f 0100 	mov.w	r1, #0
 80014c4:	bf14      	ite	ne
 80014c6:	2340      	movne	r3, #64	@ 0x40
 80014c8:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80014cc:	2000      	movs	r0, #0
 80014ce:	6031      	str	r1, [r6, #0]
 80014d0:	602b      	str	r3, [r5, #0]
 80014d2:	b016      	add	sp, #88	@ 0x58
 80014d4:	bd70      	pop	{r4, r5, r6, pc}
 80014d6:	466a      	mov	r2, sp
 80014d8:	f000 f848 	bl	800156c <_fstat_r>
 80014dc:	2800      	cmp	r0, #0
 80014de:	dbec      	blt.n	80014ba <__swhatbuf_r+0x12>
 80014e0:	9901      	ldr	r1, [sp, #4]
 80014e2:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80014e6:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80014ea:	4259      	negs	r1, r3
 80014ec:	4159      	adcs	r1, r3
 80014ee:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80014f2:	e7eb      	b.n	80014cc <__swhatbuf_r+0x24>

080014f4 <__smakebuf_r>:
 80014f4:	898b      	ldrh	r3, [r1, #12]
 80014f6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80014f8:	079d      	lsls	r5, r3, #30
 80014fa:	4606      	mov	r6, r0
 80014fc:	460c      	mov	r4, r1
 80014fe:	d507      	bpl.n	8001510 <__smakebuf_r+0x1c>
 8001500:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8001504:	6023      	str	r3, [r4, #0]
 8001506:	6123      	str	r3, [r4, #16]
 8001508:	2301      	movs	r3, #1
 800150a:	6163      	str	r3, [r4, #20]
 800150c:	b003      	add	sp, #12
 800150e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001510:	ab01      	add	r3, sp, #4
 8001512:	466a      	mov	r2, sp
 8001514:	f7ff ffc8 	bl	80014a8 <__swhatbuf_r>
 8001518:	9f00      	ldr	r7, [sp, #0]
 800151a:	4605      	mov	r5, r0
 800151c:	4639      	mov	r1, r7
 800151e:	4630      	mov	r0, r6
 8001520:	f7ff fbba 	bl	8000c98 <_malloc_r>
 8001524:	b948      	cbnz	r0, 800153a <__smakebuf_r+0x46>
 8001526:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800152a:	059a      	lsls	r2, r3, #22
 800152c:	d4ee      	bmi.n	800150c <__smakebuf_r+0x18>
 800152e:	f023 0303 	bic.w	r3, r3, #3
 8001532:	f043 0302 	orr.w	r3, r3, #2
 8001536:	81a3      	strh	r3, [r4, #12]
 8001538:	e7e2      	b.n	8001500 <__smakebuf_r+0xc>
 800153a:	89a3      	ldrh	r3, [r4, #12]
 800153c:	6020      	str	r0, [r4, #0]
 800153e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001542:	81a3      	strh	r3, [r4, #12]
 8001544:	9b01      	ldr	r3, [sp, #4]
 8001546:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800154a:	b15b      	cbz	r3, 8001564 <__smakebuf_r+0x70>
 800154c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001550:	4630      	mov	r0, r6
 8001552:	f000 f81d 	bl	8001590 <_isatty_r>
 8001556:	b128      	cbz	r0, 8001564 <__smakebuf_r+0x70>
 8001558:	89a3      	ldrh	r3, [r4, #12]
 800155a:	f023 0303 	bic.w	r3, r3, #3
 800155e:	f043 0301 	orr.w	r3, r3, #1
 8001562:	81a3      	strh	r3, [r4, #12]
 8001564:	89a3      	ldrh	r3, [r4, #12]
 8001566:	431d      	orrs	r5, r3
 8001568:	81a5      	strh	r5, [r4, #12]
 800156a:	e7cf      	b.n	800150c <__smakebuf_r+0x18>

0800156c <_fstat_r>:
 800156c:	b538      	push	{r3, r4, r5, lr}
 800156e:	4d07      	ldr	r5, [pc, #28]	@ (800158c <_fstat_r+0x20>)
 8001570:	2300      	movs	r3, #0
 8001572:	4604      	mov	r4, r0
 8001574:	4608      	mov	r0, r1
 8001576:	4611      	mov	r1, r2
 8001578:	602b      	str	r3, [r5, #0]
 800157a:	f7fe ff86 	bl	800048a <_fstat>
 800157e:	1c43      	adds	r3, r0, #1
 8001580:	d102      	bne.n	8001588 <_fstat_r+0x1c>
 8001582:	682b      	ldr	r3, [r5, #0]
 8001584:	b103      	cbz	r3, 8001588 <_fstat_r+0x1c>
 8001586:	6023      	str	r3, [r4, #0]
 8001588:	bd38      	pop	{r3, r4, r5, pc}
 800158a:	bf00      	nop
 800158c:	200001c0 	.word	0x200001c0

08001590 <_isatty_r>:
 8001590:	b538      	push	{r3, r4, r5, lr}
 8001592:	4d06      	ldr	r5, [pc, #24]	@ (80015ac <_isatty_r+0x1c>)
 8001594:	2300      	movs	r3, #0
 8001596:	4604      	mov	r4, r0
 8001598:	4608      	mov	r0, r1
 800159a:	602b      	str	r3, [r5, #0]
 800159c:	f7fe ff85 	bl	80004aa <_isatty>
 80015a0:	1c43      	adds	r3, r0, #1
 80015a2:	d102      	bne.n	80015aa <_isatty_r+0x1a>
 80015a4:	682b      	ldr	r3, [r5, #0]
 80015a6:	b103      	cbz	r3, 80015aa <_isatty_r+0x1a>
 80015a8:	6023      	str	r3, [r4, #0]
 80015aa:	bd38      	pop	{r3, r4, r5, pc}
 80015ac:	200001c0 	.word	0x200001c0

080015b0 <_sbrk_r>:
 80015b0:	b538      	push	{r3, r4, r5, lr}
 80015b2:	4d06      	ldr	r5, [pc, #24]	@ (80015cc <_sbrk_r+0x1c>)
 80015b4:	2300      	movs	r3, #0
 80015b6:	4604      	mov	r4, r0
 80015b8:	4608      	mov	r0, r1
 80015ba:	602b      	str	r3, [r5, #0]
 80015bc:	f7fe ff8e 	bl	80004dc <_sbrk>
 80015c0:	1c43      	adds	r3, r0, #1
 80015c2:	d102      	bne.n	80015ca <_sbrk_r+0x1a>
 80015c4:	682b      	ldr	r3, [r5, #0]
 80015c6:	b103      	cbz	r3, 80015ca <_sbrk_r+0x1a>
 80015c8:	6023      	str	r3, [r4, #0]
 80015ca:	bd38      	pop	{r3, r4, r5, pc}
 80015cc:	200001c0 	.word	0x200001c0

080015d0 <_init>:
 80015d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015d2:	bf00      	nop
 80015d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015d6:	bc08      	pop	{r3}
 80015d8:	469e      	mov	lr, r3
 80015da:	4770      	bx	lr

080015dc <_fini>:
 80015dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015de:	bf00      	nop
 80015e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015e2:	bc08      	pop	{r3}
 80015e4:	469e      	mov	lr, r3
 80015e6:	4770      	bx	lr
